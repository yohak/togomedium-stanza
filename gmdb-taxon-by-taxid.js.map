{"version":3,"file":"gmdb-taxon-by-taxid.js","sources":["../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/pluralize/pluralize.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/utils/taxon.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-taxon-by-taxid/index.ts"],"sourcesContent":["/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Lower cased words. E.g. \"hello\".\n    if (word === word.toLowerCase()) return token.toLowerCase();\n\n    // Upper cased words. E.g. \"WHISKY\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['passerby', 'passersby']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/\\b((?:tit)?m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'],\n    [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'aircraft',\n    'alcohol',\n    'ammo',\n    'analytics',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'firmware',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'hardware',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'mud',\n    'manga',\n    'news',\n    'only',\n    'personnel',\n    'pike',\n    'plankton',\n    'pliers',\n    'police',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'software',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transportation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    /pok[eé]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n","import { Optional } from \"yohak-tools\";\n\nexport enum TAXON_RANK {\n  _0_KINGDOM = \"Kingdom\",\n  _1_PHYLUM = \"Phylum\",\n  _2_CLASS = \"Class\",\n  _3_ORDER = \"Order\",\n  _4_FAMILY = \"Family\",\n  _5_TRIBE = \"Tribe\",\n  _6_GENUS = \"Genus\",\n  _7_SECTION = \"Section\",\n  _8_SERIES = \"Series\",\n  _9_SPECIES = \"Species\",\n  _10_VARIETY = \"Variety\",\n  _11_FORM = \"Form\",\n}\n\nexport const availableRanks: TAXON_RANK[] = [\n  TAXON_RANK._0_KINGDOM,\n  TAXON_RANK._1_PHYLUM,\n  TAXON_RANK._2_CLASS,\n  TAXON_RANK._3_ORDER,\n  TAXON_RANK._4_FAMILY,\n  TAXON_RANK._6_GENUS,\n  TAXON_RANK._9_SPECIES,\n];\n\nexport const getRankLevel = (rank: TAXON_RANK): number => {\n  return availableRanks.indexOf(rank);\n};\n\nexport const getNextTaxon = (rank: TAXON_RANK): Optional<TAXON_RANK> => {\n  const rankLevel = getRankLevel(rank);\n  if (rankLevel === -1) {\n    return undefined;\n  }\n  return availableRanks[rankLevel + 1];\n};\n","import pluralize from \"pluralize\";\nimport Stanza from \"togostanza/stanza\";\nimport { Optional } from \"yohak-tools\";\nimport { getData } from \"../../utils/getData\";\nimport { importWebFontForTogoMedium } from \"../../utils/stanza\";\nimport {\n  capitalizeFirstLetter,\n  makeNcbiOrganismLink,\n  makeTogoGenomeOrganismLink,\n  unescapeJsonString,\n} from \"../../utils/string\";\nimport { getNextTaxon, TAXON_RANK } from \"../../utils/taxon\";\nimport { ApiResponse } from \"../../utils/types\";\nimport { API_GROWTH_MEDIUM } from \"../../utils/variables\";\n\nexport default class gmdbTaxonByTaxid extends Stanza<StanzaParameters> {\n  async render() {\n    const params = this.params;\n    if (!params.tax_id) {\n      return;\n    }\n    const apiName = \"gmdb_taxonomic_rank_by_taxid\";\n    const result = await getData<ApiBody>(`${API_GROWTH_MEDIUM}${apiName}`, {\n      tax_id: params.tax_id,\n    });\n    // console.log(result.body);\n\n    const data = parseData(result);\n    const parameters = await addRankChildren(data);\n    const template = \"stanza.html.hbs\";\n    this.renderTemplate<TemplateParameters>({ template, parameters });\n    importWebFontForTogoMedium(this);\n  }\n}\n\nconst addRankChildren = async (data: TemplateParameters): Promise<TemplateParameters> => {\n  if (!data.rank) {\n    return data;\n  }\n  const rank: TAXON_RANK =\n    data.rank === \"Superkingdom\" ? TAXON_RANK._0_KINGDOM : (data.rank as TAXON_RANK);\n  const nextRank = getNextTaxon(rank)!;\n  const response = await getData<SubRankApiBody>(`${API_GROWTH_MEDIUM}list_taxons_by_rank`, {\n    tax_id: data.taxid,\n    rank: nextRank,\n  });\n  const getId = (str: string) => str.split(\"/\").pop();\n\n  const subClasses: LineageParameter[] = response\n    .body!.sort((a, b) => {\n      const nameA = a.name.toLowerCase();\n      const nameB = b.name.toLowerCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    })\n    .map((item) => ({\n      label: item.name,\n      link: makeLineageLink(getId(item.id)!, nextRank),\n      rank: nextRank,\n    }));\n  return {\n    ...data,\n    subClass: {\n      label: pluralize(nextRank),\n      items: subClasses.map((item) => ({\n        label: item.label,\n        link: item.link,\n      })),\n    },\n  };\n};\n\nconst parseData = (data: ApiResponse<ApiBody>): TemplateParameters => {\n  return makeSuccessData(data.body!);\n};\nconst makeSuccessData = (body: ApiBody): TemplateParameters => {\n  return {\n    subClass: undefined,\n    scientific_name: body.scientific_name,\n    taxid: body.taxid,\n    togoGenomeUrl: makeTogoGenomeOrganismLink(body.taxid),\n    ncbiUrl: makeNcbiOrganismLink(body.taxid),\n    rank: parseRank(body.rank),\n    authority_name: unescapeJsonString(body.authority_name),\n    lineage: [\n      ...body.lineage\n        .filter((item) => item.taxid !== \"NA\")\n        .map((item) => ({\n          link: makeLineageLink(item.taxid, item.rank as TAXON_RANK),\n          rank: capitalizeFirstLetter(item.rank),\n          label: item.label,\n          togoGenomeUrl: makeTogoGenomeOrganismLink(item.taxid),\n          ncbiUrl: makeNcbiOrganismLink(item.taxid),\n        })),\n      {\n        link: makeLineageLink(body.taxid, body.rank as TAXON_RANK),\n        rank: parseRank(body.rank),\n        label: body.scientific_name,\n        current: true,\n      },\n    ],\n  };\n};\n\nconst parseRank = (str: string): string => str!.split(\"/\").pop()!;\n\nconst makeLineageLink = (id: string, rank: TAXON_RANK): string =>\n  rank === TAXON_RANK._9_SPECIES ? `/organism/${id}` : `/taxon/${id}`;\n\ntype StanzaParameters = {\n  tax_id: string;\n};\n\ntype TemplateParameters = {\n  ncbiUrl: Optional<string>;\n  togoGenomeUrl: Optional<string>;\n  scientific_name: string;\n  taxid: string;\n  rank: string;\n  authority_name: Optional<string>;\n  lineage: LineageParameter[];\n  subClass:\n    | {\n        label: string;\n        items: {\n          label: string;\n          link: string;\n        }[];\n      }\n    | undefined;\n};\n\ntype LineageParameter = {\n  link: string;\n  rank: Optional<string>;\n  label: string;\n  current?: boolean;\n};\n\ntype ApiBody = {\n  scientific_name: string;\n  taxid: string;\n  rank: string;\n  authority_name: string;\n  lineage: Lineage[];\n};\n\ntype Lineage = {\n  rank: string;\n  label: string;\n  uri: string;\n  taxid: string;\n};\n\ntype SubRankApiBody = { id: string; name: string }[];\n"],"names":["require","this"],"mappings":"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"}
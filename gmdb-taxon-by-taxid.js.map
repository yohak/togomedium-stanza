{"version":3,"file":"gmdb-taxon-by-taxid.js","sources":["../../../home/runner/work/togomedium-stanza/togomedium-stanza/shared/components/info-detail/capsuleList.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-taxon-by-taxid/components/StanzaView.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-taxon-by-taxid/utils/api.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-taxon-by-taxid/App.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-taxon-by-taxid/index.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport React, { FC } from \"react\";\nimport { COLOR_PRIMARY } from \"../../styles/variables\";\n\nexport const CapsuleList: FC<{ labels: string[] }> = ({ labels }) => (\n  <CapsuleListWrapper>\n    {labels.map((label, index) => (\n      <li key={index}>{label}</li>\n    ))}\n  </CapsuleListWrapper>\n);\n\nconst CapsuleListWrapper = styled.ul`\n  display: flex;\n  margin-top: 8px;\n  margin-bottom: -8px;\n  flex-wrap: wrap;\n\n  li {\n    border: 1px solid ${COLOR_PRIMARY};\n    padding: 5px 10px;\n    border-radius: 20px;\n    margin-right: 8px;\n    margin-bottom: 8px;\n  }\n`;\n","import { css } from \"@emotion/react\";\nimport React, { ComponentProps, FC } from \"react\";\nimport { AcceptsEmotion, Optional } from \"yohak-tools\";\nimport { CapsuleList } from \"../../../shared/components/info-detail/capsuleList\";\nimport { LineageList } from \"../../../shared/components/info-detail/LineageList\";\nimport {\n  ColorButton,\n  ColWrapper,\n  InfoId,\n  InfoTitle,\n  StandardParagraph,\n  SubHeading,\n} from \"../../../shared/components/info-detail/styles\";\nimport { stanzaWrapper } from \"../../../shared/styles/common\";\n\nconst linkNCBI = \"https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?mode=Info&id=\";\nconst linkTogoGenome = \"http://togogenome.org/organism/\";\n\ntype Props = {\n  taxid: string;\n  scientificName: string;\n  authorityName: Optional<string>;\n  lineage: ComponentProps<typeof LineageList>[\"lineage\"];\n  typeMaterials: string[];\n  otherTypeMaterials: { key: string; labels: string[] }[];\n} & AcceptsEmotion;\n\nexport type WikipediaData = {\n  thumb?: string;\n  description?: string;\n  link: string;\n};\nexport const StanzaView: FC<Props> = ({\n  css,\n  className,\n  taxid,\n  scientificName,\n  authorityName,\n  lineage,\n  typeMaterials,\n  otherTypeMaterials,\n}) => {\n  return (\n    <div css={[stanzaView, css, stanzaWrapper]} className={className}>\n      <ColWrapper>\n        <div>\n          <InfoId>\n            <span>Taxonomy ID: </span>\n            <span>{taxid}</span>\n            <div className={\"tag-list\"}>\n              <ColorButton target=\"_blank\" href={`${linkNCBI}${taxid}`} rel=\"noreferrer\">\n                NCBI\n              </ColorButton>\n              <ColorButton target=\"_blank\" href={`${linkTogoGenome}${taxid}`} rel=\"noreferrer\">\n                TogoGenome\n              </ColorButton>\n            </div>\n          </InfoId>\n          <InfoTitle>{scientificName}</InfoTitle>\n          {authorityName && (\n            <StandardParagraph>\n              Authority name:\n              <br />\n              {authorityName}\n            </StandardParagraph>\n          )}\n          <div>\n            <SubHeading>Lineage</SubHeading>\n            <LineageList lineage={lineage} />\n          </div>\n          {!!typeMaterials.length && (\n            <div>\n              <SubHeading>Type strains</SubHeading>\n              <CapsuleList labels={typeMaterials} />\n            </div>\n          )}\n          {!!otherTypeMaterials.length && (\n            <div>\n              {otherTypeMaterials.map((mat, index) => (\n                <div key={index}>\n                  <SubHeading>Heterotypic synonyms: {mat.key} </SubHeading>\n                  <CapsuleList labels={mat.labels} />\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </ColWrapper>\n    </div>\n  );\n};\n\nconst stanzaView = css``;\n","import { ComponentProps } from \"react\";\nimport { Optional } from \"yohak-tools\";\nimport { ApiLineage, parseLineage } from \"../../../shared/components/info-detail/LineageList\";\nimport { getData } from \"../../../shared/utils/getData\";\nimport { unescapeJsonString } from \"../../../shared/utils/string\";\nimport { URL_API } from \"../../../shared/utils/variables\";\nimport { StanzaView } from \"../components/StanzaView\";\n\nexport type ViewProps = ComponentProps<typeof StanzaView>;\ntype ApiBody = {\n  scientific_name: string;\n  taxid: number | string;\n  rank: string;\n  authority_name: string;\n  lineage: ApiLineage;\n  type_material: { label: string; name?: string }[];\n  other_type_material: { label: string; name: string }[];\n};\n\ntype OtherMaterialParameter = {\n  key: string;\n  labels: string[];\n};\n\nconst parseData = (body: ApiBody): ViewProps => {\n  const taxid = body.taxid.toString();\n  const scientificName = body.scientific_name;\n  const authorityName = unescapeJsonString(body.authority_name);\n  const lineage = parseLineage(body.lineage);\n  const typeMaterials = body.type_material.map((item) => item.label);\n  const otherTypeMaterials = parseOtherTypeMaterial(body.other_type_material);\n  return { taxid, scientificName, authorityName, lineage, typeMaterials, otherTypeMaterials };\n};\n\nconst parseOtherTypeMaterial = (data: ApiBody[\"other_type_material\"]): OtherMaterialParameter[] => {\n  return data\n    .map((obj) => obj.name!)\n    .reduce<string[]>((a: string[], b: string) => {\n      if (a.indexOf(b) < 0) {\n        a.push(b);\n      }\n      return a;\n    }, [])!\n    .map((key) => ({\n      key,\n      labels: data.filter((item) => item.name === key).map((elm) => elm.label),\n    }));\n};\n\nexport const getTaxonData = async (tax_id: string): Promise<Optional<ViewProps>> => {\n  const apiName = \"gmdb_organism_by_taxid\";\n  const result = await getData<ApiBody>(`${URL_API}${apiName}`, { tax_id });\n  if (result.body?.taxid) {\n    return parseData(result.body);\n  } else {\n    return undefined;\n  }\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Optional } from \"yohak-tools\";\nimport { StanzaView, WikipediaData } from \"./components/StanzaView\";\nimport { getTaxonData, ViewProps } from \"./utils/api\";\n\ntype Props = {\n  stanzaElement?: Document;\n  tax_id: string;\n};\n\nconst App: FC<Props> = ({ tax_id }) => {\n  const [props, setProps] = useState<Optional<ViewProps>>(undefined);\n  useEffect(() => {\n    (async () => {\n      const result = await getTaxonData(tax_id);\n      // console.log(result);\n      if (!result) return;\n      setProps(result);\n    })();\n  }, [tax_id]);\n  return props ? <StanzaView {...props} /> : <>Loading...</>;\n};\n\nexport default App;\n\nconst fetchWikipediaData = async (link: string): Promise<WikipediaData> => {\n  const key = link.split(\"/\").pop();\n  const url = `https://en.wikipedia.org/api/rest_v1/page/summary/${key}`;\n  const res = await fetch(url);\n  const data = await res.json();\n  if (!data) return { link };\n  return { thumb: data.thumbnail?.source, description: data.extract, link };\n};\n","import { ThemeProvider } from \"@mui/material/styles\";\nimport React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport Stanza from \"togostanza/stanza\";\nimport App from \"./App\";\nimport { EmotionCacheProvider } from \"../../shared/components/EmotionCacheProvider\";\nimport { muiTheme } from \"../../shared/components/muiTheme\";\nimport { importWebFontForTogoMedium } from \"../../shared/utils/stanza\";\n\nexport default class HelloReact extends Stanza<StanzaParameters> {\n  async render() {\n    this._render();\n    importWebFontForTogoMedium(this);\n  }\n\n  handleAttributeChange() {\n    this._render();\n  }\n\n  _render() {\n    const main = this.root.querySelector(\"main\");\n    const tax_id = this.params.tax_id;\n    ReactDOM.render(\n      <StrictMode>\n        <RecoilRoot>\n          <ThemeProvider theme={muiTheme}>\n            <EmotionCacheProvider>\n              <App stanzaElement={this.root} tax_id={tax_id} />\n            </EmotionCacheProvider>\n          </ThemeProvider>\n        </RecoilRoot>\n      </StrictMode>,\n      main\n    );\n  }\n}\n\ntype StanzaParameters = {\n  tax_id: string;\n};\n"],"names":["_jsx","styled","_jsxs","useState","useEffect","StrictMode","RecoilRoot"],"mappings":"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"}
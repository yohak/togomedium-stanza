{"version":3,"file":"gmdb-media-alignment-table.js","sources":["../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/consts.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/utils/findBranchFromTrunk.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/functions/toggleFooterComponent.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/states/componentTree.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/components/FooterCell.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/states/isMediaExpanded.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/states/isOrganismsExpanded.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/components/FooterRow.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/components/HeaderCell.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/components/HeaderRow.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/components/AlignmentCell.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/components/InfoCell.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/components/MediaRow.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/functions/makeAlignmentData.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/functions/makeComponentBranch.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/functions/makeFooterComponents.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/components/AlignmentTable.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/components/InfoColumns.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/components/ScrollableTable.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/App.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-alignment-table/index.tsx"],"sourcesContent":["export const WIDTH_EXPANDED = \"200px\";\nexport const WIDTH_COMPACT = \"130px\";\nexport const WIDTH_ALIGNMENT_CELL = 40;\nexport const ROOT_COMPONENT = \"GMO_000002\";\n","import { TreeBranch } from \"./types\";\n\nexport const findBranchFromTrunk = <Branch extends TreeBranch>(\n  id: string,\n  tree: Branch[]\n): Branch | undefined => {\n  return tree.map((branch) => findNode(id, branch)).find((r) => !!r);\n};\n\n// https://stackoverflow.com/a/22222867/2207021\nfunction findNode<Branch extends TreeBranch>(id: string, currentNode: Branch): Branch | undefined {\n  let i, currentChild, result;\n  if (id == currentNode.id) {\n    return currentNode;\n  } else {\n    for (i = 0; i < currentNode.children.length; i += 1) {\n      currentChild = currentNode.children[i];\n      result = findNode(id, currentChild);\n      if (result !== undefined) {\n        return result as Branch;\n      }\n    }\n    return undefined;\n  }\n}\n","import { Optional } from \"yohak-tools\";\nimport { clone } from \"../../../utils/clone\";\nimport { findBranchFromTrunk } from \"../../../utils/findBranchFromTrunk\";\nimport { ComponentTrunk } from \"../types\";\n\nexport const toggleFooterComponent = (\n  id: string,\n  data: ComponentTrunk\n): Optional<ComponentTrunk> => {\n  const cloned = clone(data);\n  const branch = findBranchFromTrunk(id, cloned);\n  if (branch) {\n    branch.isOpen = !branch.isOpen;\n    return cloned;\n  } else {\n    return undefined;\n  }\n};\n","import { atom, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { toggleFooterComponent } from \"../functions/toggleFooterComponent\";\nimport { ComponentTrunk } from \"../types\";\n\nconst componentTree = atom<ComponentTrunk>({ key: \"componentTree\", default: [] });\n\nexport const useComponentTreeState = () => {\n  return useRecoilValue(componentTree);\n};\n\nexport const useComponentTreeMutators = () => {\n  const setComponentTree = useSetRecoilState(componentTree);\n\n  const toggleComponent = (id: string) => {\n    setComponentTree((prev) => {\n      const result = toggleFooterComponent(id, prev);\n      if (result) {\n        return result;\n      } else {\n        return [];\n      }\n    });\n  };\n  return { toggleComponent, setComponentTree };\n};\n","import { css } from \"@emotion/react\";\nimport React, { FC } from \"react\";\nimport { IconBlank, IconCompact, IconExpand } from \"../../../components/icons\";\nimport { COLOR_WHITE, SIZE1, SIZE3, SIZE4 } from \"../../../components/styles\";\nimport { WIDTH_ALIGNMENT_CELL } from \"../consts\";\nimport { useComponentTreeMutators } from \"../states/componentTree\";\n\ntype Props = {\n  label: string;\n  level: number;\n  hasChildren: boolean;\n  isOpen: boolean;\n  id: string;\n};\n\nexport const FooterCell: FC<Props> = ({ label, level, hasChildren, isOpen, id }) => {\n  const { toggleComponent } = useComponentTreeMutators();\n  const onClickFooterItem = (id: string) => toggleComponent(id);\n\n  const Icon = hasChildren ? (\n    isOpen ? (\n      <IconCompact css={icon} onClick={() => onClickFooterItem(id)} />\n    ) : (\n      <IconExpand css={icon} onClick={() => onClickFooterItem(id)} />\n    )\n  ) : (\n    <IconBlank css={icon} />\n  );\n\n  return (\n    <div css={wrapper}>\n      {new Array(level).fill(null).map((r, index) => (\n        <span key={index} className=\"spacer\" />\n      ))}\n      {Icon}\n      <span className={\"text\"}>{label}</span>\n    </div>\n  );\n};\n\nconst wrapper = css`\n  box-sizing: border-box;\n  width: ${WIDTH_ALIGNMENT_CELL}px;\n  background-color: ${COLOR_WHITE};\n  white-space: nowrap;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: ${SIZE1};\n  padding-bottom: ${SIZE4};\n  & > .text {\n    writing-mode: vertical-rl;\n    transform: translateX(-1px);\n  }\n  & > .spacer {\n    display: block;\n    height: ${SIZE3};\n    flex-grow: 0;\n    flex-shrink: 0;\n  }\n`;\n\nconst iconBlank = css`\n  margin-bottom: ${SIZE1};\n`;\nconst icon = css`\n  ${iconBlank};\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`;\n","import { atom, useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\n\nconst isMediaExpanded = atom<boolean>({ key: \"isMediaExpanded\", default: false });\n\nexport const useIsMediaExpendedState = () => {\n  return useRecoilValue(isMediaExpanded);\n};\n\nexport const useIsMediaExpandedMutators = () => {\n  const setIsMediaExpanded = useSetRecoilState(isMediaExpanded);\n  return { setIsMediaExpanded };\n};\n","import { atom, useRecoilValue, useSetRecoilState } from \"recoil\";\n\nconst isOrganismsExpanded = atom<boolean>({ key: \"isOrganismsExpanded\", default: false });\n\nexport const useIsOrganismsExpendedState = () => {\n  return useRecoilValue(isOrganismsExpanded);\n};\n\nexport const useIsOrganismsExpandedMutators = () => {\n  const setIsOrganismsExpanded = useSetRecoilState(isOrganismsExpanded);\n  return { setIsOrganismsExpanded };\n};\n","import { css } from \"@emotion/react\";\nimport React, { ComponentProps, FC } from \"react\";\nimport { FooterCell } from \"./FooterCell\";\nimport { COLOR_WHITE } from \"../../../components/styles\";\nimport { WIDTH_COMPACT, WIDTH_EXPANDED } from \"../consts\";\nimport { useIsMediaExpendedState } from \"../states/isMediaExpanded\";\nimport { useIsOrganismsExpendedState } from \"../states/isOrganismsExpanded\";\n\ntype Props = {\n  components: ComponentProps<typeof FooterCell>[];\n};\n\nexport const FooterRow: FC<Props> = ({ components }) => {\n  const isMediaExpanded = useIsMediaExpendedState();\n  const isOrganismsExpanded = useIsOrganismsExpendedState();\n  return (\n    <div css={wrapper}>\n      <div css={infoSpacer} className={isMediaExpanded ? \"expand\" : \"compact\"} />\n      <div css={infoSpacer} className={isOrganismsExpanded ? \"expand\" : \"compact\"} />\n      {components.map((component) => (\n        <FooterCell {...component} key={component.id} />\n      ))}\n      <div css={componentSpacer} />\n    </div>\n  );\n};\n\nconst wrapper = css`\n  display: flex;\n  gap: 1px;\n  width: 100%;\n  & > * {\n    flex-grow: 0;\n    flex-shrink: 0;\n  }\n`;\n\nconst infoSpacer = css`\n  background-color: ${COLOR_WHITE};\n  &.expand {\n    width: ${WIDTH_EXPANDED};\n  }\n  &.compact {\n    width: ${WIDTH_COMPACT};\n  }\n`;\n\nconst componentSpacer = css`\n  background-color: ${COLOR_WHITE};\n  flex-grow: 1 !important;\n`;\n","import { css } from \"@emotion/react\";\nimport React, { FC } from \"react\";\nimport { IconCompact, IconExpand } from \"../../../components/icons\";\nimport { COLOR_GRAY700, COLOR_WHITE, SIZE1 } from \"../../../components/styles\";\nimport { WIDTH_COMPACT, WIDTH_EXPANDED } from \"../consts\";\n\ntype Props = {\n  label: string;\n  onClickIcon: () => void;\n  isExpanded: boolean;\n};\n\nexport const HeaderCell: FC<Props> = ({ label, onClickIcon, isExpanded }) => {\n  return (\n    <div css={wrapper} className={isExpanded ? \"expanded\" : \"compact\"}>\n      <span>{label}</span>\n      {isExpanded ? (\n        <IconCompact css={icon} onClick={onClickIcon} />\n      ) : (\n        <IconExpand css={icon} onClick={onClickIcon} />\n      )}\n    </div>\n  );\n};\n\nconst wrapper = css`\n  display: flex;\n  background-color: ${COLOR_WHITE};\n  align-items: center;\n  justify-content: space-between;\n  padding: ${SIZE1};\n  box-sizing: border-box;\n\n  &.expanded {\n    width: ${WIDTH_EXPANDED};\n  }\n\n  &.compact {\n    width: ${WIDTH_COMPACT};\n  }\n`;\n\nconst icon = css`\n  font-size: 24px;\n  color: ${COLOR_GRAY700};\n  cursor: pointer;\n`;\n","import { css } from \"@emotion/react\";\nimport React, { FC } from \"react\";\nimport { HeaderCell } from \"./HeaderCell\";\nimport { COLOR_WHITE, SIZE1 } from \"../../../components/styles\";\nimport { AcceptsEmotion } from \"../../../utils/types\";\nimport { useIsMediaExpandedMutators, useIsMediaExpendedState } from \"../states/isMediaExpanded\";\nimport {\n  useIsOrganismsExpandedMutators,\n  useIsOrganismsExpendedState,\n} from \"../states/isOrganismsExpanded\";\n\ntype Props = {} & AcceptsEmotion;\n\nexport const HeaderRow: FC<Props> = ({ css, className }) => {\n  const isMediaExpanded = useIsMediaExpendedState();\n  const isOrganismsExpanded = useIsOrganismsExpendedState();\n  const { setIsMediaExpanded } = useIsMediaExpandedMutators();\n  const { setIsOrganismsExpanded } = useIsOrganismsExpandedMutators();\n\n  const onClickMediaExpandIcon = () => {\n    setIsMediaExpanded(!isMediaExpanded);\n  };\n  const onClickOrganismExpandIcon = () => {\n    setIsOrganismsExpanded(!isOrganismsExpanded);\n  };\n\n  return (\n    <div css={[wrapper, css]} className={className}>\n      <HeaderCell\n        label={\"Media\"}\n        isExpanded={isMediaExpanded}\n        onClickIcon={onClickMediaExpandIcon}\n      />\n      <HeaderCell\n        label={\"Organisms\"}\n        isExpanded={isOrganismsExpanded}\n        onClickIcon={onClickOrganismExpandIcon}\n      />\n      <div css={components}>Components</div>\n    </div>\n  );\n};\n\nconst wrapper = css`\n  display: flex;\n  gap: 1px;\n  width: 100%;\n  & > * {\n    flex-grow: 0;\n    flex-shrink: 0;\n  }\n`;\n\nconst components = css`\n  background-color: ${COLOR_WHITE};\n  display: flex;\n  align-items: center;\n  padding: ${SIZE1};\n  flex-grow: 1 !important;\n`;\n","import { css } from \"@emotion/react\";\nimport { Tooltip } from \"@mui/material\";\nimport React, { FC } from \"react\";\nimport { PATH_COMPONENT } from \"../../../components/consts\";\nimport { COLOR_GRAY, COLOR_PRIMARY, COLOR_WHITE, SIZE1 } from \"../../../components/styles\";\n\nexport type AlignmentCellState = \"grouped\" | \"available\" | \"none\";\n\ntype Props = {\n  state: AlignmentCellState;\n  label: string;\n  id: string;\n};\n\nexport const AlignmentCell: FC<Props> = ({ state, label, id }) => {\n  return (\n    <div css={wrapper}>\n      <Tooltip title={label} placement={\"top\"} PopperProps={{ disablePortal: true }} arrow>\n        <a\n          href={`${PATH_COMPONENT}${id}`}\n          target=\"_blank\"\n          className={`icon-${state} icon`}\n          rel=\"noreferrer\"\n        >\n          <span />\n        </a>\n      </Tooltip>\n    </div>\n  );\n};\n\nconst wrapper = css`\n  box-sizing: border-box;\n  background-color: ${COLOR_WHITE};\n  padding: ${SIZE1};\n  display: flex;\n  width: fit-content;\n  align-items: center;\n  flex-grow: 0;\n  .icon {\n    display: flex;\n    width: 24px;\n    height: 24px;\n    justify-content: center;\n    align-items: center;\n  }\n  .icon-available > span {\n    display: block;\n    width: 100%;\n    height: 100%;\n    background-color: ${COLOR_PRIMARY};\n  }\n  .icon-grouped > span {\n    display: block;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    border: 2px solid ${COLOR_PRIMARY};\n  }\n\n  .icon-none > span {\n    display: none;\n    box-sizing: border-box;\n    width: 100%;\n    height: 4px;\n    background-color: ${COLOR_GRAY};\n    border-radius: 4px;\n  }\n`;\n","import { css } from \"@emotion/react\";\nimport { Slider, Tooltip } from \"@mui/material\";\nimport React, { FC } from \"react\";\nimport { COLOR_PRIMARY, COLOR_WHITE, FONT_EN, SIZE1 } from \"../../../components/styles\";\nimport { LabelInfo } from \"../../../utils/types\";\nimport { WIDTH_COMPACT, WIDTH_EXPANDED } from \"../consts\";\n\ntype Props = {\n  info: LabelInfo[];\n  linkBase: string;\n  expanded: boolean;\n};\n\nexport const InfoCell: FC<Props> = (props) => {\n  return props.expanded ? <Expanded {...props} /> : <Compact {...props} />;\n};\n\nconst Compact: FC<Props> = ({ info, linkBase }) => {\n  return (\n    <div css={wrapper} className=\"compact\">\n      <div className=\"inner\">\n        {info.map((item, index) => (\n          <div key={item.id} className=\"text\">\n            <Tooltip\n              title={item.label}\n              placement={\"top\"}\n              PopperProps={{ disablePortal: true }}\n              arrow\n            >\n              <a href={`${linkBase}${item.id}`} target=\"_blank\" rel=\"noreferrer\">\n                {item.id}\n              </a>\n            </Tooltip>\n            {index < info.length - 1 && \",\"}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst Expanded: FC<Props> = ({ info, linkBase }) => {\n  return (\n    <div css={wrapper} className=\"expanded\">\n      <div className=\"inner\">\n        {info.map((item) => (\n          <div key={item.id} className=\"text\">\n            <a href={`${linkBase}${item.id}`} target=\"_blank\" rel=\"noreferrer\">\n              {item.id}\n            </a>\n            <span>{item.label}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst wrapper = css`\n  font-family: ${FONT_EN};\n  font-size: 14px;\n  background-color: ${COLOR_WHITE};\n  box-sizing: border-box;\n  padding: ${SIZE1};\n  display: block;\n  min-height: 40px;\n  .inner {\n    padding-top: 4px;\n  }\n  a {\n    color: ${COLOR_PRIMARY};\n    text-decoration: none;\n  }\n  &.compact {\n    width: ${WIDTH_COMPACT};\n    //overflow: hidden;\n    //text-overflow: ellipsis;\n    .inner {\n      display: flex;\n      flex-wrap: wrap;\n    }\n    .text {\n      margin-right: ${SIZE1};\n    }\n  }\n  &.expanded {\n    width: ${WIDTH_EXPANDED};\n    .text {\n      display: flex;\n      flex-direction: column;\n      + .text {\n        margin-top: ${SIZE1};\n      }\n    }\n  }\n`;\n","import { css } from \"@emotion/react\";\nimport React, { ComponentProps, FC } from \"react\";\nimport { AlignmentCell } from \"./AlignmentCell\";\nimport { InfoCell } from \"./InfoCell\";\nimport { PATH_MEDIUM, PATH_ORGANISM } from \"../../../components/consts\";\nimport { COLOR_WHITE } from \"../../../components/styles\";\nimport { LabelInfo } from \"../../../utils/types\";\nimport { useIsMediaExpendedState } from \"../states/isMediaExpanded\";\nimport { useIsOrganismsExpendedState } from \"../states/isOrganismsExpanded\";\n\ntype Props = {\n  medium: LabelInfo;\n  organisms: LabelInfo[];\n  components: ComponentProps<typeof AlignmentCell>[];\n};\n\nexport const MediaRow: FC<Props> = ({ medium, organisms, components }) => {\n  const isMediaExpanded = useIsMediaExpendedState();\n  const isOrganismsExpanded = useIsOrganismsExpendedState();\n  return (\n    <div css={wrapper}>\n      <InfoCell info={[medium]} expanded={isMediaExpanded} linkBase={PATH_MEDIUM} />\n      <InfoCell info={organisms} expanded={isOrganismsExpanded} linkBase={PATH_ORGANISM} />\n      {components.map((component) => (\n        <AlignmentCell {...component} key={component.id} />\n      ))}\n      <div css={spacer} />\n    </div>\n  );\n};\n\nconst wrapper = css`\n  display: flex;\n  gap: 1px;\n  width: 100%;\n  & > * {\n    flex-grow: 0;\n    flex-shrink: 0;\n  }\n`;\n\nconst spacer = css`\n  background-color: ${COLOR_WHITE};\n  flex-grow: 1 !important;\n`;\n","import { ComponentProps } from \"react\";\nimport { MediaAlignmentTableResponse } from \"../../../api/media-alignment-table/types\";\nimport { LabelInfo } from \"../../../utils/types\";\nimport { AlignmentCellState } from \"../components/AlignmentCell\";\nimport { FooterCell } from \"../components/FooterCell\";\nimport { MediaRow } from \"../components/MediaRow\";\nimport { RawComponent, RawMedium, RawOrganism } from \"../types\";\n\ntype ComponentInfo = ComponentProps<typeof FooterCell>;\ntype CellProps = ComponentProps<typeof MediaRow>[\"components\"][0];\n\nexport const makeAlignmentData = (\n  data: MediaAlignmentTableResponse,\n  footerComponents: ComponentInfo[]\n): ComponentProps<typeof MediaRow>[] => {\n  return data.media.map((medium) =>\n    makeMediaRowProp(medium, data.organisms, data.components, footerComponents)\n  );\n};\n\nconst makeMediaRowProp = (\n  mediumData: RawMedium,\n  organismsData: RawOrganism[],\n  componentsData: RawComponent[],\n  footerList: ComponentInfo[]\n): ComponentProps<typeof MediaRow> => {\n  const medium: LabelInfo = {\n    id: mediumData.gm_id,\n    label: mediumData.name,\n  };\n  const organisms: LabelInfo[] = mediumData.organisms.map(\n    (taxid) =>\n      organismsData\n        .filter((organism) => organism.tax_id === taxid)\n        .map((organism) => ({ id: organism.tax_id, label: organism.name }))[0]\n  );\n  const components: CellProps[] = footerList.map((data) => {\n    return {\n      id: data.id,\n      label: data.label,\n      state: findComponentState(data.id, mediumData.components, componentsData, footerList),\n    };\n  });\n  return {\n    medium,\n    organisms,\n    components,\n  };\n};\n\nconst findComponentState = (\n  id: string,\n  mediumComponents: string[],\n  allComponents: RawComponent[],\n  footerList: ComponentInfo[]\n): AlignmentCellState => {\n  if (mediumComponents.find((candidate) => candidate === id)) {\n    return \"available\";\n  }\n\n  const groupedId = listChildComponents(id, allComponents).find((child) =>\n    mediumComponents.find((candidate) => candidate === child)\n  );\n  if (groupedId) {\n    const isOpen = footerList.find((item) => item.id === id)?.isOpen === true;\n    return isOpen ? \"grouped\" : \"available\";\n  }\n  return \"none\";\n};\n\nconst listChildComponents = (id: string, components: RawComponent[]): string[] => {\n  const result: string[] = [];\n  const addItem = (parentId: string) => {\n    const children = components.filter((c) => c.parent === parentId).map((c) => c.gmo_id);\n    result.push(...children);\n    children.forEach((c) => addItem(c));\n  };\n  addItem(id);\n  return result;\n};\n\nexport const __TEST__ = { listChildComponents };\n","import { ROOT_COMPONENT } from \"../consts\";\nimport { ComponentBranch, ComponentTrunk, RawComponent } from \"../types\";\n\nexport const makeComponentTree = (components: RawComponent[]): ComponentTrunk => {\n  const items: ComponentTrunk = components.map((item) => ({\n    name: item.name,\n    id: item.gmo_id,\n    level: 0,\n    parent: item.parent,\n    children: [],\n    isOpen: false,\n    func: item.function,\n  }));\n\n  const result = items.filter((item) => !item.parent || item.parent === ROOT_COMPONENT);\n  items.forEach(\n    (item) => (item.children = items.filter((filtering) => filtering.parent === item.id))\n  );\n  items.forEach((item) => (item.level = getItemLevel(item, items)));\n  return result;\n};\n\nconst getItemLevel = (item: ComponentBranch, items: ComponentBranch[]): number => {\n  let parent: ComponentBranch | undefined = item;\n  let level: number = -1;\n  do {\n    level++;\n    parent = items.find((found) => found.id === parent!.parent);\n  } while (parent);\n\n  return level;\n};\n","import { ComponentProps } from \"react\";\nimport { FooterCell } from \"../components/FooterCell\";\nimport { ComponentBranch, ComponentTrunk } from \"../types\";\n\ntype Props = ComponentProps<typeof FooterCell>;\n\nexport const makeFooterComponents = (data: ComponentTrunk): Props[] => {\n  const result: Props[] = [];\n  data.forEach((item) => {\n    addToCollection(item, result);\n  });\n  return result;\n};\n\nconst addToCollection = (data: ComponentBranch, collection: Props[]) => {\n  collection.push({\n    label: data.name,\n    level: data.level,\n    hasChildren: data.children.length > 0,\n    isOpen: data.isOpen,\n    id: data.id,\n  });\n  if (data.isOpen) {\n    (data.children as ComponentBranch[]).forEach((item) => {\n      addToCollection(item, collection);\n    });\n  }\n};\n","import { css } from \"@emotion/react\";\nimport React, { ComponentProps, FC, useEffect, useState } from \"react\";\nimport { FooterRow } from \"./FooterRow\";\nimport { HeaderRow } from \"./HeaderRow\";\nimport { MediaRow } from \"./MediaRow\";\nimport { MediaAlignmentTableResponse } from \"../../../api/media-alignment-table/types\";\nimport { COLOR_GRAY_LINE } from \"../../../components/styles\";\nimport { makeAlignmentData } from \"../functions/makeAlignmentData\";\nimport { makeComponentTree } from \"../functions/makeComponentBranch\";\nimport { makeFooterComponents } from \"../functions/makeFooterComponents\";\nimport { useComponentTreeMutators, useComponentTreeState } from \"../states/componentTree\";\n\ntype Props = { data: MediaAlignmentTableResponse };\ntype RowProps = ComponentProps<typeof MediaRow>[];\ntype FooterProps = ComponentProps<typeof FooterRow>;\n\nexport const AlignmentTable: FC<Props> = ({ data }) => {\n  const [rowProps, setRowProps] = useState<RowProps>([]);\n  const componentTree = useComponentTreeState();\n  const { setComponentTree } = useComponentTreeMutators();\n  const [footerProps, setFooterProps] = useState<FooterProps>({ components: [] });\n  useEffect(() => {\n    setComponentTree(makeComponentTree(data.components));\n  }, [data]);\n  useEffect(() => {\n    const components = makeFooterComponents(componentTree);\n    setFooterProps({ components });\n    setRowProps(makeAlignmentData(data, components));\n  }, [componentTree]);\n  return (\n    <div css={wrapper}>\n      <HeaderRow />\n      {rowProps.map((props) => (\n        <MediaRow {...props} key={props.medium.id} />\n      ))}\n      <FooterRow {...footerProps} />\n    </div>\n  );\n};\n\nconst wrapper = css`\n  display: flex;\n  gap: 1px;\n  flex-direction: column;\n  background-color: ${COLOR_GRAY_LINE};\n  padding: 1px;\n`;\n","import { css } from \"@emotion/react\";\nimport React, { FC } from \"react\";\nimport { HeaderCell } from \"./HeaderCell\";\nimport { MediaRow } from \"./MediaRow\";\nimport { MediaAlignmentTableResponse } from \"../../../api/media-alignment-table/types\";\nimport { COLOR_GRAY_LINE, COLOR_WHITE } from \"../../../components/styles\";\nimport { AcceptsEmotion } from \"../../../utils/types\";\nimport { WIDTH_COMPACT, WIDTH_EXPANDED } from \"../consts\";\nimport { useIsMediaExpandedMutators, useIsMediaExpendedState } from \"../states/isMediaExpanded\";\nimport {\n  useIsOrganismsExpandedMutators,\n  useIsOrganismsExpendedState,\n} from \"../states/isOrganismsExpanded\";\n\ntype Props = { data: MediaAlignmentTableResponse } & AcceptsEmotion;\n\nexport const InfoColumns: FC<Props> = ({ data, css, className }) => {\n  const isMediaExpanded = useIsMediaExpendedState();\n  const isOrganismsExpanded = useIsOrganismsExpendedState();\n  const { setIsMediaExpanded } = useIsMediaExpandedMutators();\n  const { setIsOrganismsExpanded } = useIsOrganismsExpandedMutators();\n\n  const onClickMediaExpandIcon = () => {\n    setIsMediaExpanded(!isMediaExpanded);\n  };\n  const onClickOrganismExpandIcon = () => {\n    setIsOrganismsExpanded(!isOrganismsExpanded);\n  };\n  return (\n    <div css={[wrapper, css]} className={className}>\n      <div css={header}>\n        <HeaderCell\n          label={\"Media\"}\n          isExpanded={isMediaExpanded}\n          onClickIcon={onClickMediaExpandIcon}\n        />\n        <HeaderCell\n          label={\"Organisms\"}\n          isExpanded={isOrganismsExpanded}\n          onClickIcon={onClickOrganismExpandIcon}\n        />\n      </div>\n      {data.media.map((m) => {\n        const organisms = m.organisms.map((taxid) => {\n          const organism = data.organisms.find((o) => o.tax_id === taxid);\n          const id: string = organism ? organism.tax_id : \"\";\n          const label: string = organism ? organism.name : \"\";\n          return { id, label };\n        });\n        return (\n          <MediaRow\n            key={m.gm_id}\n            medium={{ id: m.gm_id, label: m.name }}\n            organisms={organisms}\n            components={[]}\n          />\n        );\n      })}\n      <div css={spacerRow}>\n        <span css={spacer} className={isMediaExpanded ? \"expanded\" : \"compact\"} />\n        <span css={spacer} className={isOrganismsExpanded ? \"expanded\" : \"compact\"} />\n      </div>\n    </div>\n  );\n};\n\nconst wrapper = css`\n  display: flex;\n  gap: 1px;\n  flex-direction: column;\n  background-color: ${COLOR_GRAY_LINE};\n  width: fit-content;\n  height: 100%;\n  padding: 1px 0 1px 1px;\n  box-sizing: border-box;\n`;\nconst header = css`\n  width: fit-content;\n  display: flex;\n  gap: 1px;\n`;\nconst spacerRow = css`\n  flex-grow: 1;\n  gap: 1px;\n  display: flex;\n`;\n\nconst spacer = css`\n  background-color: ${COLOR_WHITE};\n  //flex-grow: 1;\n  &.expanded {\n    width: ${WIDTH_EXPANDED};\n  }\n  &.compact {\n    width: ${WIDTH_COMPACT};\n  }\n`;\n","import { css } from \"@emotion/react\";\nimport React, { FC } from \"react\";\nimport { AlignmentTable } from \"./AlignmentTable\";\nimport { HeaderRow } from \"./HeaderRow\";\nimport { InfoColumns } from \"./InfoColumns\";\nimport { MediaAlignmentTableResponse } from \"../../../api/media-alignment-table/types\";\nimport { COLOR_GRAY_LINE } from \"../../../components/styles\";\n\ntype Props = { data: MediaAlignmentTableResponse };\n\nexport const ScrollableTable: FC<Props> = ({ data }) => {\n  return (\n    <div css={wrapper}>\n      <HeaderRow css={header} />\n      <InfoColumns data={data} css={infoColumns} />\n      <div className=\"inner\">\n        <AlignmentTable data={data} />\n      </div>\n    </div>\n  );\n};\n\nconst wrapper = css`\n  position: relative;\n  overflow: hidden;\n  background-color: ${COLOR_GRAY_LINE};\n  & > .inner {\n    overflow-x: auto;\n  }\n`;\nconst header = css`\n  position: absolute;\n  top: 0;\n  left: 0;\n  border: 1px solid ${COLOR_GRAY_LINE};\n  background-color: ${COLOR_GRAY_LINE};\n`;\nconst infoColumns = css`\n  position: absolute;\n  z-index: 2;\n  top: 0;\n  left: 0;\n`;\n","import { css } from \"@emotion/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { ScrollableTable } from \"./components/ScrollableTable\";\nimport { MediaAlignmentTableResponse } from \"../../api/media-alignment-table/types\";\nimport { API_MEDIA_ALIMENT } from \"../../api/paths\";\nimport { COLOR_WHITE, SIZE1 } from \"../../components/styles\";\nimport { getData } from \"../../utils/getData\";\n\nexport type AppProps = {\n  gm_ids: string[];\n};\n\nconst App = ({ gm_ids }: AppProps) => {\n  const [data, setData] = useState<MediaAlignmentTableResponse>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  useEffect(() => {\n    setData(undefined);\n    setIsLoading(true);\n    (async () => {\n      const response = await getData<MediaAlignmentTableResponse>(API_MEDIA_ALIMENT, { gm_ids });\n      setIsLoading(false);\n      setData(response.body);\n    })();\n  }, [gm_ids]);\n  return <div css={wrapper}>{data && <ScrollableTable data={data} />}</div>;\n};\n\nconst wrapper = css`\n  min-height: 100px;\n  background-color: ${COLOR_WHITE};\n  border-radius: 5px;\n  padding: ${SIZE1};\n`;\nconst loadingWrapper = css``;\n\nexport default App;\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport Stanza from \"togostanza/stanza\";\nimport App from \"./App\";\nimport { EmotionCacheProvider } from \"../../components/EmotionCacheProvider\";\nimport { importWebFontForTogoMedium } from \"../../utils/stanza\";\nimport { stringToArray } from \"../../utils/string\";\n\nexport default class HelloReact extends Stanza<StanzaParameters> {\n  async render() {\n    this._render();\n    importWebFontForTogoMedium(this);\n  }\n\n  handleAttributeChange() {\n    this._render();\n  }\n\n  _render() {\n    const main = this.root.querySelector(\"main\");\n    const gm_ids = stringToArray(this.params.gm_ids);\n    ReactDOM.render(\n      <StrictMode>\n        <RecoilRoot>\n          <EmotionCacheProvider>\n            <App {...{ gm_ids }} />\n          </EmotionCacheProvider>\n        </RecoilRoot>\n      </StrictMode>,\n      main\n    );\n  }\n}\n\ntype StanzaParameters = {\n  gm_ids: string;\n};\n"],"names":["atom","useRecoilValue","useSetRecoilState","_jsx","icon","_jsxs","wrapper","_createElement","spacer","useState","useEffect","header","StrictMode","RecoilRoot"],"mappings":";;;;;;;;AAAO,MAAM,cAAc,GAAG,OAAO,CAAC;AAC/B,MAAM,aAAa,GAAG,OAAO,CAAC;AAC9B,MAAM,oBAAoB,GAAG,EAAE,CAAC;AAChC,MAAM,cAAc,GAAG,YAAY;;ACDnC,MAAM,mBAAmB,GAAG,CACjC,EAAU,EACV,IAAc;IAEd,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC;AAGF,SAAS,QAAQ,CAA4B,EAAU,EAAE,WAAmB;IAC1E,IAAI,CAAC,EAAE,YAAY,EAAE,MAAM,CAAC;IAC5B,IAAI,EAAE,IAAI,WAAW,CAAC,EAAE,EAAE;QACxB,OAAO,WAAW,CAAC;KACpB;SAAM;QACL,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YACnD,YAAY,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,GAAG,QAAQ,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;YACpC,IAAI,MAAM,KAAK,SAAS,EAAE;gBACxB,OAAO,MAAgB,CAAC;aACzB;SACF;QACD,OAAO,SAAS,CAAC;KAClB;AACH;;ACnBO,MAAM,qBAAqB,GAAG,CACnC,EAAU,EACV,IAAoB;IAEpB,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;IAC3B,MAAM,MAAM,GAAG,mBAAmB,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IAC/C,IAAI,MAAM,EAAE;QACV,MAAM,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;QAC/B,OAAO,MAAM,CAAC;KACf;SAAM;QACL,OAAO,SAAS,CAAC;KAClB;AACH,CAAC;;ACbD,MAAM,aAAa,GAAGA,cAAI,CAAiB,EAAE,GAAG,EAAE,eAAe,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;AAE3E,MAAM,qBAAqB,GAAG;IACnC,OAAOC,eAAc,CAAC,aAAa,CAAC,CAAC;AACvC,CAAC,CAAC;AAEK,MAAM,wBAAwB,GAAG;IACtC,MAAM,gBAAgB,GAAGC,eAAiB,CAAC,aAAa,CAAC,CAAC;IAE1D,MAAM,eAAe,GAAG,CAAC,EAAU;QACjC,gBAAgB,CAAC,CAAC,IAAI;YACpB,MAAM,MAAM,GAAG,qBAAqB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAC/C,IAAI,MAAM,EAAE;gBACV,OAAO,MAAM,CAAC;aACf;iBAAM;gBACL,OAAO,EAAE,CAAC;aACX;SACF,CAAC,CAAC;KACJ,CAAC;IACF,OAAO,EAAE,eAAe,EAAE,gBAAgB,EAAE,CAAC;AAC/C,CAAC;;ACTM,MAAM,UAAU,GAAc,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE,EAAE;IAC7E,MAAM,EAAE,eAAe,EAAE,GAAG,wBAAwB,EAAE,CAAC;IACvD,MAAM,iBAAiB,GAAG,CAAC,EAAU,KAAK,eAAe,CAAC,EAAE,CAAC,CAAC;IAE9D,MAAM,IAAI,GAAG,WAAW,IACtB,MAAM,IACJC,IAAC,WAAW,IAAC,GAAG,EAAEC,MAAI,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC,EAAE,CAAC,WAAI,KAEhED,IAAC,UAAU,IAAC,GAAG,EAAEC,MAAI,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC,EAAE,CAAC,WAAI,CAChE,KAEDD,IAAC,SAAS,IAAC,GAAG,EAAEC,MAAI,WAAI,CACzB,CAAC;IAEF,QACEC,4BAAK,GAAG,EAAEC,SAAO,iBACd,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,MACxCH,cAAkB,SAAS,EAAC,QAAQ,IAAzB,KAAK,CAAuB,CACxC,CAAC,EACD,IAAI,EACLA,4BAAM,SAAS,EAAE,MAAM,gBAAG,KAAK,YAAQ,aACnC,EACN;AACJ,CAAC,CAAC;AAEF,MAAMG,SAAO,GAAG,GAAG,CAAA;;WAER,oBAAoB;sBACT,WAAW;;;;;aAKpB,KAAK;oBACE,KAAK;;;;;;;cAOX,KAAK;;;;CAIlB,CAAC;AAEF,MAAM,SAAS,GAAG,GAAG,CAAA;mBACF,KAAK;CACvB,CAAC;AACF,MAAMF,MAAI,GAAG,GAAG,CAAA;IACZ,SAAS;;;;CAIZ;;ACpED,MAAM,eAAe,GAAGJ,cAAI,CAAU,EAAE,GAAG,EAAE,iBAAiB,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;AAE3E,MAAM,uBAAuB,GAAG;IACrC,OAAOC,eAAc,CAAC,eAAe,CAAC,CAAC;AACzC,CAAC,CAAC;AAEK,MAAM,0BAA0B,GAAG;IACxC,MAAM,kBAAkB,GAAGC,eAAiB,CAAC,eAAe,CAAC,CAAC;IAC9D,OAAO,EAAE,kBAAkB,EAAE,CAAC;AAChC,CAAC;;ACTD,MAAM,mBAAmB,GAAGF,cAAI,CAAU,EAAE,GAAG,EAAE,qBAAqB,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;AAEnF,MAAM,2BAA2B,GAAG;IACzC,OAAOC,eAAc,CAAC,mBAAmB,CAAC,CAAC;AAC7C,CAAC,CAAC;AAEK,MAAM,8BAA8B,GAAG;IAC5C,MAAM,sBAAsB,GAAGC,eAAiB,CAAC,mBAAmB,CAAC,CAAC;IACtE,OAAO,EAAE,sBAAsB,EAAE,CAAC;AACpC,CAAC;;ACCM,MAAM,SAAS,GAAc,CAAC,EAAE,UAAU,EAAE;IACjD,MAAM,eAAe,GAAG,uBAAuB,EAAE,CAAC;IAClD,MAAM,mBAAmB,GAAG,2BAA2B,EAAE,CAAC;IAC1D,QACEG,4BAAK,GAAG,EAAEC,SAAO,iBACfH,aAAK,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,eAAe,GAAG,QAAQ,GAAG,SAAS,WAAI,EAC3EA,aAAK,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,mBAAmB,GAAG,QAAQ,GAAG,SAAS,WAAI,EAC9E,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,MACxBI,MAAC,UAAU,oBAAK,SAAS,IAAE,GAAG,EAAE,SAAS,CAAC,EAAE,IAAI,CACjD,CAAC,EACFJ,aAAK,GAAG,EAAE,eAAe,WAAI,aACzB,EACN;AACJ,CAAC,CAAC;AAEF,MAAMG,SAAO,GAAG,GAAG,CAAA;;;;;;;;CAQlB,CAAC;AAEF,MAAM,UAAU,GAAG,GAAG,CAAA;sBACA,WAAW;;aAEpB,cAAc;;;aAGd,aAAa;;CAEzB,CAAC;AAEF,MAAM,eAAe,GAAG,GAAG,CAAA;sBACL,WAAW;;CAEhC;;ACtCM,MAAM,UAAU,GAAc,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE;IACtE,QACED,4BAAK,GAAG,EAAEC,SAAO,EAAE,SAAS,EAAE,UAAU,GAAG,UAAU,GAAG,SAAS,iBAC/DH,wBAAO,KAAK,WAAQ,EACnB,UAAU,IACTA,IAAC,WAAW,IAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,WAAI,KAEhDA,IAAC,UAAU,IAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,WAAI,CAChD,aACG,EACN;AACJ,CAAC,CAAC;AAEF,MAAMG,SAAO,GAAG,GAAG,CAAA;;sBAEG,WAAW;;;aAGpB,KAAK;;;;aAIL,cAAc;;;;aAId,aAAa;;CAEzB,CAAC;AAEF,MAAM,IAAI,GAAG,GAAG,CAAA;;WAEL,aAAa;;CAEvB;;ACjCM,MAAM,SAAS,GAAc,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE;IACrD,MAAM,eAAe,GAAG,uBAAuB,EAAE,CAAC;IAClD,MAAM,mBAAmB,GAAG,2BAA2B,EAAE,CAAC;IAC1D,MAAM,EAAE,kBAAkB,EAAE,GAAG,0BAA0B,EAAE,CAAC;IAC5D,MAAM,EAAE,sBAAsB,EAAE,GAAG,8BAA8B,EAAE,CAAC;IAEpE,MAAM,sBAAsB,GAAG;QAC7B,kBAAkB,CAAC,CAAC,eAAe,CAAC,CAAC;KACtC,CAAC;IACF,MAAM,yBAAyB,GAAG;QAChC,sBAAsB,CAAC,CAAC,mBAAmB,CAAC,CAAC;KAC9C,CAAC;IAEF,QACED,4BAAK,GAAG,EAAE,CAACC,SAAO,EAAE,GAAG,CAAC,EAAE,SAAS,EAAE,SAAS,iBAC5CH,IAAC,UAAU,IACT,KAAK,EAAE,OAAO,EACd,UAAU,EAAE,eAAe,EAC3B,WAAW,EAAE,sBAAsB,WACnC,EACFA,IAAC,UAAU,IACT,KAAK,EAAE,WAAW,EAClB,UAAU,EAAE,mBAAmB,EAC/B,WAAW,EAAE,yBAAyB,WACtC,EACFA,2BAAK,GAAG,EAAE,UAAU,wCAAkB,aAClC,EACN;AACJ,CAAC,CAAC;AAEF,MAAMG,SAAO,GAAG,GAAG,CAAA;;;;;;;;CAQlB,CAAC;AAEF,MAAM,UAAU,GAAG,GAAG,CAAA;sBACA,WAAW;;;aAGpB,KAAK;;CAEjB;;AC7CM,MAAM,aAAa,GAAc,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE;IAC3D,QACEH,2BAAK,GAAG,EAAEG,SAAO,gBACfH,IAAC,OAAO,kBAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,EAAE,KAAK,sBAClFA,yBACE,IAAI,EAAE,GAAG,cAAc,GAAG,EAAE,EAAE,EAC9B,MAAM,EAAC,QAAQ,EACf,SAAS,EAAE,QAAQ,KAAK,OAAO,EAC/B,GAAG,EAAC,YAAY,gBAEhBA,uBAAQ,YACN,YACI,YACN,EACN;AACJ,CAAC,CAAC;AAEF,MAAMG,SAAO,GAAG,GAAG,CAAA;;sBAEG,WAAW;aACpB,KAAK;;;;;;;;;;;;;;;;wBAgBM,aAAa;;;;;;;wBAOb,aAAa;;;;;;;;wBAQb,UAAU;;;CAGjC;;ACvDM,MAAM,QAAQ,GAAc,CAAC,KAAK;IACvC,OAAO,KAAK,CAAC,QAAQ,GAAGH,IAAC,QAAQ,oBAAK,KAAK,UAAI,GAAGA,IAAC,OAAO,oBAAK,KAAK,UAAI,CAAC;AAC3E,CAAC,CAAC;AAEF,MAAM,OAAO,GAAc,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;IAC5C,QACEA,2BAAK,GAAG,EAAEG,SAAO,EAAE,SAAS,EAAC,SAAS,gBACpCH,2BAAK,SAAS,EAAC,OAAO,gBACnB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,MACpBE,4BAAmB,SAAS,EAAC,MAAM,iBACjCF,IAAC,OAAO,kBACN,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,SAAS,EAAE,KAAK,EAChB,WAAW,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,EACpC,KAAK,sBAELA,yBAAG,IAAI,EAAE,GAAG,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,MAAM,EAAC,QAAQ,EAAC,GAAG,EAAC,YAAY,gBAC/D,IAAI,CAAC,EAAE,YACN,YACI,EACT,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,MAXvB,IAAI,CAAC,EAAE,CAYX,CACP,CAAC,YACE,YACF,EACN;AACJ,CAAC,CAAC;AAEF,MAAM,QAAQ,GAAc,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;IAC7C,QACEA,2BAAK,GAAG,EAAEG,SAAO,EAAE,SAAS,EAAC,UAAU,gBACrCH,2BAAK,SAAS,EAAC,OAAO,gBACnB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,MACbE,4BAAmB,SAAS,EAAC,MAAM,iBACjCF,yBAAG,IAAI,EAAE,GAAG,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,MAAM,EAAC,QAAQ,EAAC,GAAG,EAAC,YAAY,gBAC/D,IAAI,CAAC,EAAE,YACN,EACJA,wBAAO,IAAI,CAAC,KAAK,WAAQ,MAJjB,IAAI,CAAC,EAAE,CAKX,CACP,CAAC,YACE,YACF,EACN;AACJ,CAAC,CAAC;AAEF,MAAMG,SAAO,GAAG,GAAG,CAAA;iBACF,OAAO;;sBAEF,WAAW;;aAEpB,KAAK;;;;;;;aAOL,aAAa;;;;aAIb,aAAa;;;;;;;;sBAQJ,KAAK;;;;aAId,cAAc;;;;;sBAKL,KAAK;;;;CAI1B;;AC/EM,MAAM,QAAQ,GAAc,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE;IACnE,MAAM,eAAe,GAAG,uBAAuB,EAAE,CAAC;IAClD,MAAM,mBAAmB,GAAG,2BAA2B,EAAE,CAAC;IAC1D,QACED,4BAAK,GAAG,EAAEC,SAAO,iBACfH,IAAC,QAAQ,IAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,WAAW,WAAI,EAC9EA,IAAC,QAAQ,IAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,mBAAmB,EAAE,QAAQ,EAAE,aAAa,WAAI,EACpF,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,MACxBI,MAAC,aAAa,oBAAK,SAAS,IAAE,GAAG,EAAE,SAAS,CAAC,EAAE,IAAI,CACpD,CAAC,EACFJ,aAAK,GAAG,EAAEK,QAAM,WAAI,aAChB,EACN;AACJ,CAAC,CAAC;AAEF,MAAMF,SAAO,GAAG,GAAG,CAAA;;;;;;;;CAQlB,CAAC;AAEF,MAAME,QAAM,GAAG,GAAG,CAAA;sBACI,WAAW;;CAEhC;;ACjCM,MAAM,iBAAiB,GAAG,CAC/B,IAAiC,EACjC,gBAAiC;IAEjC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,KAC3B,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAC5E,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAG,CACvB,UAAqB,EACrB,aAA4B,EAC5B,cAA8B,EAC9B,UAA2B;IAE3B,MAAM,MAAM,GAAc;QACxB,EAAE,EAAE,UAAU,CAAC,KAAK;QACpB,KAAK,EAAE,UAAU,CAAC,IAAI;KACvB,CAAC;IACF,MAAM,SAAS,GAAgB,UAAU,CAAC,SAAS,CAAC,GAAG,CACrD,CAAC,KAAK,KACJ,aAAa;SACV,MAAM,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,MAAM,KAAK,KAAK,CAAC;SAC/C,GAAG,CAAC,CAAC,QAAQ,MAAM,EAAE,EAAE,EAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3E,CAAC;IACF,MAAM,UAAU,GAAgB,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI;QAClD,OAAO;YACL,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,kBAAkB,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,UAAU,EAAE,cAAc,EAAE,UAAU,CAAC;SACtF,CAAC;KACH,CAAC,CAAC;IACH,OAAO;QACL,MAAM;QACN,SAAS;QACT,UAAU;KACX,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,CACzB,EAAU,EACV,gBAA0B,EAC1B,aAA6B,EAC7B,UAA2B;;IAE3B,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK,SAAS,KAAK,EAAE,CAAC,EAAE;QAC1D,OAAO,WAAW,CAAC;KACpB;IAED,MAAM,SAAS,GAAG,mBAAmB,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAClE,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK,SAAS,KAAK,KAAK,CAAC,CAC1D,CAAC;IACF,IAAI,SAAS,EAAE;QACb,MAAM,MAAM,GAAG,CAAA,MAAA,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,0CAAE,MAAM,MAAK,IAAI,CAAC;QAC1E,OAAO,MAAM,GAAG,SAAS,GAAG,WAAW,CAAC;KACzC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,mBAAmB,GAAG,CAAC,EAAU,EAAE,UAA0B;IACjE,MAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,MAAM,OAAO,GAAG,CAAC,QAAgB;QAC/B,MAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;QACtF,MAAM,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;QACzB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;KACrC,CAAC;IACF,OAAO,CAAC,EAAE,CAAC,CAAC;IACZ,OAAO,MAAM,CAAC;AAChB,CAAC;;AC5EM,MAAM,iBAAiB,GAAG,CAAC,UAA0B;IAC1D,MAAM,KAAK,GAAmB,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM;QACtD,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,EAAE,EAAE,IAAI,CAAC,MAAM;QACf,KAAK,EAAE,CAAC;QACR,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,QAAQ,EAAE,EAAE;QACZ,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,IAAI,CAAC,QAAQ;KACpB,CAAC,CAAC,CAAC;IAEJ,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,cAAc,CAAC,CAAC;IACtF,KAAK,CAAC,OAAO,CACX,CAAC,IAAI,MAAM,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CACtF,CAAC;IACF,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAClE,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,YAAY,GAAG,CAAC,IAAqB,EAAE,KAAwB;IACnE,IAAI,MAAM,GAAgC,IAAI,CAAC;IAC/C,IAAI,KAAK,GAAW,CAAC,CAAC,CAAC;IACvB,GAAG;QACD,KAAK,EAAE,CAAC;QACR,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,EAAE,KAAK,MAAO,CAAC,MAAM,CAAC,CAAC;KAC7D,QAAQ,MAAM,EAAE;IAEjB,OAAO,KAAK,CAAC;AACf,CAAC;;ACzBM,MAAM,oBAAoB,GAAG,CAAC,IAAoB;IACvD,MAAM,MAAM,GAAY,EAAE,CAAC;IAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;QAChB,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KAC/B,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CAAC,IAAqB,EAAE,UAAmB;IACjE,UAAU,CAAC,IAAI,CAAC;QACd,KAAK,EAAE,IAAI,CAAC,IAAI;QAChB,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;QACrC,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,EAAE,EAAE,IAAI,CAAC,EAAE;KACZ,CAAC,CAAC;IACH,IAAI,IAAI,CAAC,MAAM,EAAE;QACd,IAAI,CAAC,QAA8B,CAAC,OAAO,CAAC,CAAC,IAAI;YAChD,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;SACnC,CAAC,CAAC;KACJ;AACH,CAAC;;ACXM,MAAM,cAAc,GAAc,CAAC,EAAE,IAAI,EAAE;IAChD,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAGC,sBAAQ,CAAW,EAAE,CAAC,CAAC;IACvD,MAAM,aAAa,GAAG,qBAAqB,EAAE,CAAC;IAC9C,MAAM,EAAE,gBAAgB,EAAE,GAAG,wBAAwB,EAAE,CAAC;IACxD,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAGA,sBAAQ,CAAc,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC;IAChFC,uBAAS,CAAC;QACR,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;KACtD,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACXA,uBAAS,CAAC;QACR,MAAM,UAAU,GAAG,oBAAoB,CAAC,aAAa,CAAC,CAAC;QACvD,cAAc,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;QAC/B,WAAW,CAAC,iBAAiB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;KAClD,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;IACpB,QACEL,4BAAK,GAAG,EAAEC,SAAO,iBACfH,IAAC,SAAS,aAAG,EACZ,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,MAClBI,MAAC,QAAQ,oBAAK,KAAK,IAAE,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,IAAI,CAC9C,CAAC,EACFJ,IAAC,SAAS,oBAAK,WAAW,UAAI,aAC1B,EACN;AACJ,CAAC,CAAC;AAEF,MAAMG,SAAO,GAAG,GAAG,CAAA;;;;sBAIG,eAAe;;CAEpC;;AC9BM,MAAM,WAAW,GAAc,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE;IAC7D,MAAM,eAAe,GAAG,uBAAuB,EAAE,CAAC;IAClD,MAAM,mBAAmB,GAAG,2BAA2B,EAAE,CAAC;IAC1D,MAAM,EAAE,kBAAkB,EAAE,GAAG,0BAA0B,EAAE,CAAC;IAC5D,MAAM,EAAE,sBAAsB,EAAE,GAAG,8BAA8B,EAAE,CAAC;IAEpE,MAAM,sBAAsB,GAAG;QAC7B,kBAAkB,CAAC,CAAC,eAAe,CAAC,CAAC;KACtC,CAAC;IACF,MAAM,yBAAyB,GAAG;QAChC,sBAAsB,CAAC,CAAC,mBAAmB,CAAC,CAAC;KAC9C,CAAC;IACF,QACED,4BAAK,GAAG,EAAE,CAACC,SAAO,EAAE,GAAG,CAAC,EAAE,SAAS,EAAE,SAAS,iBAC5CD,4BAAK,GAAG,EAAEM,QAAM,iBACdR,IAAC,UAAU,IACT,KAAK,EAAE,OAAO,EACd,UAAU,EAAE,eAAe,EAC3B,WAAW,EAAE,sBAAsB,WACnC,EACFA,IAAC,UAAU,IACT,KAAK,EAAE,WAAW,EAClB,UAAU,EAAE,mBAAmB,EAC/B,WAAW,EAAE,yBAAyB,WACtC,aACE,EACL,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;gBAChB,MAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK;oBACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC;oBAChE,MAAM,EAAE,GAAW,QAAQ,GAAG,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC;oBACnD,MAAM,KAAK,GAAW,QAAQ,GAAG,QAAQ,CAAC,IAAI,GAAG,EAAE,CAAC;oBACpD,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC;iBACtB,CAAC,CAAC;gBACH,QACEA,IAAC,QAAQ,IAEP,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,EACtC,SAAS,EAAE,SAAS,EACpB,UAAU,EAAE,EAAE,IAHT,CAAC,CAAC,KAAK,CAIZ,EACF;aACH,CAAC,EACFE,4BAAK,GAAG,EAAE,SAAS,iBACjBF,cAAM,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,eAAe,GAAG,UAAU,GAAG,SAAS,WAAI,EAC1EA,cAAM,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,mBAAmB,GAAG,UAAU,GAAG,SAAS,WAAI,aAC1E,aACF,EACN;AACJ,CAAC,CAAC;AAEF,MAAMG,SAAO,GAAG,GAAG,CAAA;;;;sBAIG,eAAe;;;;;CAKpC,CAAC;AACF,MAAMK,QAAM,GAAG,GAAG,CAAA;;;;CAIjB,CAAC;AACF,MAAM,SAAS,GAAG,GAAG,CAAA;;;;CAIpB,CAAC;AAEF,MAAM,MAAM,GAAG,GAAG,CAAA;sBACI,WAAW;;;aAGpB,cAAc;;;aAGd,aAAa;;CAEzB;;ACtFM,MAAM,eAAe,GAAc,CAAC,EAAE,IAAI,EAAE;IACjD,QACEN,4BAAK,GAAG,EAAEC,SAAO,iBACfH,IAAC,SAAS,IAAC,GAAG,EAAE,MAAM,WAAI,EAC1BA,IAAC,WAAW,IAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,WAAW,WAAI,EAC7CA,2BAAK,SAAS,EAAC,OAAO,gBACpBA,IAAC,cAAc,IAAC,IAAI,EAAE,IAAI,WAAI,YAC1B,aACF,EACN;AACJ,CAAC,CAAC;AAEF,MAAMG,SAAO,GAAG,GAAG,CAAA;;;sBAGG,eAAe;;;;CAIpC,CAAC;AACF,MAAM,MAAM,GAAG,GAAG,CAAA;;;;sBAII,eAAe;sBACf,eAAe;CACpC,CAAC;AACF,MAAM,WAAW,GAAG,GAAG,CAAA;;;;;CAKtB;;AC9BD,MAAM,GAAG,GAAG,CAAC,EAAE,MAAM,EAAY;IAC/B,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAGG,sBAAQ,EAA+B,CAAC;IAChE,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAGA,sBAAQ,CAAU,IAAI,CAAC,CAAC;IAC1DC,uBAAS,CAAC;QACR,OAAO,CAAC,SAAS,CAAC,CAAC;QACnB,YAAY,CAAC,IAAI,CAAC,CAAC;QACnB,CAAC;YACC,MAAM,QAAQ,GAAG,MAAM,OAAO,CAA8B,iBAAiB,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;YAC3F,YAAY,CAAC,KAAK,CAAC,CAAC;YACpB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACxB,CAAA,GAAG,CAAC;KACN,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACb,OAAOP,2BAAK,GAAG,EAAE,OAAO,gBAAG,IAAI,IAAIA,IAAC,eAAe,IAAC,IAAI,EAAE,IAAI,WAAI,YAAO,CAAC;AAC5E,CAAC,CAAC;AAEF,MAAM,OAAO,GAAG,GAAG,CAAA;;sBAEG,WAAW;;aAEpB,KAAK;CACjB,CAAC;AACqB,GAAG,CAAA;;MCxBL,UAAW,SAAQ,MAAwB;IACxD,MAAM;;YACV,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,0BAA0B,CAAC,IAAI,CAAC,CAAC;SAClC;KAAA;IAED,qBAAqB;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;IAED,OAAO;QACL,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC7C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjD,QAAQ,CAAC,MAAM,CACbA,IAACS,wBAAU,cACTT,IAACU,cAAU,cACTV,IAAC,oBAAoB,cACnBA,IAAC,GAAG,oBAAK,EAAE,MAAM,EAAE,UAAI,WACF,WACZ,WACF,EACb,IAAI,CACL,CAAC;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
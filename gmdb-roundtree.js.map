{"version":3,"file":"gmdb-roundtree.js","sources":["../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-path/src/path.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/cluster.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/count.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/each.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/find.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/sum.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/sort.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/path.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/descendants.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/leaves.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/links.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/iterator.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/hierarchy/index.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-hierarchy/src/tree.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-shape/src/constant.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-shape/src/array.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-shape/src/point.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-shape/src/pointRadial.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/d3-shape/src/link/index.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-roundtree/index.ts"],"sourcesContent":["const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import * as d3 from \"d3\";\nimport Stanza from \"togostanza/stanza\";\nimport { API_GROWTH_MEDIUM } from \"../../utils/variables\";\n\ntype D3Selection = d3.Selection<any, any, any, any>;\n\n// 'kegg_code - kegg_T_num' SPARQList via KEGG API\n//  将来的にはTogoDB \"http://dev.togodb.org/sparql/kegg_gold\" を使う？\n//  今はSPARQL endpointに不具合あり。遅い。\nconst TID_API: string = `${API_GROWTH_MEDIUM}gms_kegg_code_tid`;\n\nexport default class GmdbRoundtree extends Stanza<StanzaParameters> {\n  async render() {\n    const params = this.params;\n    const [newicText, codeList] = await downloadData(params.newick, TID_API);\n    const newicTree = parseNewic(newicText);\n    const leafList = createLeafList(newicTree, codeList);\n\n    this.renderTemplate({\n      template: \"stanza.html.hbs\",\n      parameters: {\n        greeting: `Hello, ${params.newick}!`,\n      },\n    });\n\n    renderD3(this, newicTree, codeList, leafList);\n  }\n}\n\nconst downloadData = async (newicUrl: string, tidApi: string): Promise<[string, any]> => {\n  return Promise.all([\n    fetch(newicUrl, { method: \"get\", mode: \"cors\" }).then((res) => res.text()),\n    fetch(tidApi, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    }).then((res) => res.json()),\n  ]);\n};\n\nconst parseNewic = (rawText: string): NewicObj => {\n  let newick = rawText.replace(/\\n/g, \"\");\n  if (newick.match(/\\):/)) {\n    const array = newick.split(/\\)/);\n    let count = 1;\n    for (let i = 0; i < array.length; i++) {\n      if (array[i].match(/^:/)) {\n        array[i] = \"n\" + count + array[i];\n        count++;\n      }\n    }\n    newick = array.join(\")\");\n  }\n  if (newick.match(/\\);$/)) {\n    newick = newick.replace(/^\\(/, \"\").replace(/\\);$/, \"\");\n  }\n  const stack = [];\n  let child: any;\n  const root: any = [];\n  let nodeObj = root;\n\n  const array = newick.split(\"\").reverse();\n  for (let i = 0; i < array.length; i++) {\n    if (array[i] === \")\") {\n      stack.push(nodeObj);\n      nodeObj = child.children = [];\n    } else if (array[i] === \"(\") {\n      nodeObj = stack.pop();\n    } else if (array[i] === \",\") {\n      //\n    } else {\n      let string = \"\";\n      for (let j = i; j < array.length; j++) {\n        if (array[j] === \"(\" || array[j] === \")\" || array[j] === \",\") {\n          i = j - 1;\n          const element = string.split(\":\");\n          let obj: any = {\n            name: element[0],\n            distance: element[1],\n            type: \"branch\",\n          };\n          if (element[0].match(\"_\")) {\n            obj = {\n              name: element[0].split(\"_\")[1],\n              distance: element[1],\n              tag: element[0].split(\"_\")[0],\n              type: \"leaf\",\n            };\n          }\n          nodeObj.push((child = obj));\n          break;\n        }\n        string = array[j] + string;\n      }\n    }\n  }\n\n  return { name: \"root\", children: root };\n};\nconst createLeafList = (newicObj: NewicObj, codeList: any): { [key: string]: string } => {\n  const result: { [key: string]: string } = {};\n  const process = (obj: NewicObj | NewicLeaf | NewicBranch) => {\n    if (\"children\" in obj) {\n      process(obj.children[0]);\n      process(obj.children[1]);\n    }\n    if (\"type\" in obj && obj.type === \"leaf\") {\n      const id = codeList[obj.name].tid;\n      result[obj.name] = id;\n    }\n  };\n\n  process(newicObj);\n\n  return result;\n};\nconst getChildrenIDs = (d: any, includeBranches: boolean = true): string[] => {\n  const arr: any = [];\n  const loopChildren = (c: any) => {\n    c.children.forEach((child: any) => {\n      if (child.children) {\n        // console.log(\"has children\", child);\n        if (includeBranches) {\n          arr.push(child.data.name);\n        }\n        loopChildren(child);\n      } else {\n        arr.push(child.data.name);\n      }\n    });\n  };\n  loopChildren(d);\n  return arr;\n};\nconst renderD3 = (\n  stanza: Stanza,\n  newicTree: NewicObj,\n  codeList: any,\n  leafList: { [key: string]: string }\n) => {\n  const div = stanza.root.querySelector<HTMLDivElement>(\"#renderDiv\")!;\n  const d3Canvas = d3.select(div);\n  const linkGenerator: any = d3\n    .linkRadial()\n    .angle((d: any) => {\n      return ((d.x + 90) * Math.PI) / 180;\n    })\n    .radius((d: any) => {\n      return d.y;\n    });\n\n  const onClickItem = (d: any) => {\n    // console.log(d);\n    const taxIds: string[] = (d.children ? getChildrenIDs(d, false) : [d.data.name]).map(\n      (str) => leafList[str]\n    );\n    // console.log(taxIds);\n    stanza.root.dispatchEvent(\n      new CustomEvent(\"STANZA_ROUND_TREE_CLICK\", {\n        bubbles: true,\n        composed: true,\n        detail: {\n          taxIds,\n        },\n      })\n    );\n  };\n\n  type RenderResult = {\n    svg: D3Selection;\n    rePlot: () => void;\n  };\n\n  const renderCluster = (): RenderResult => {\n    let treeShape = 0;\n    const radius = 400;\n    const svg = d3Canvas\n      .append(\"svg\")\n      .attr(\"version\", 1.1)\n      .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n      .attr(\"id\", \"roundtree\")\n      .attr(\"width\", radius * 2)\n      .attr(\"height\", radius * 2);\n    const popup = d3Canvas\n      .append(\"div\")\n      .attr(\"id\", \"popup\")\n      .style(\"display\", \"none\")\n      .style(\"position\", \"absolute\")\n      .style(\"padding\", \"10px\")\n      .style(\"background-color\", \"rgba(255,255,255,0.75)\")\n      .style(\"border\", \"solid 2px #888888\")\n      .style(\"max-width\", \"300px\");\n    const g = svg.append(\"g\").attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\n\n    let hierarchyNode = d3.hierarchy(newicTree);\n    const cluster = d3.cluster().size([360, radius - 80]); // cluster type\n    const tree = d3\n      .tree()\n      .size([360, radius - 80])\n      .separation((a, b) => {\n        return (a.parent == b.parent ? 1 : 2) / a.depth;\n      }); // tree type\n    cluster(hierarchyNode);\n\n    const link = g\n      .selectAll(\".edge\")\n      .data(hierarchyNode.links())\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"edge\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#555\")\n      .attr(\"stroke-width\", \"1.5px\")\n      .attr(\"opacity\", \"0.6\")\n      .attr(\"d\", linkGenerator);\n\n    const node = g\n      .selectAll(\".node\")\n      .data(hierarchyNode.descendants())\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", (d: any) => {\n        let type = \"\";\n        if (d.data) {\n          type = \" \" + d.data.tag + \"Node\";\n        }\n        return \"node \" + d.data.type + \"Node\" + type;\n      })\n      .attr(\"transform\", (d: any) => {\n        return \"rotate(\" + d.x + \")translate(\" + d.y + \")\";\n      });\n\n    node\n      .append(\"circle\")\n      .attr(\"id\", (d) => {\n        return d.data.name;\n      })\n      .attr(\"r\", 4.5);\n\n    const rePlot = () => {\n      hierarchyNode = d3.hierarchy(newicTree);\n      if (treeShape == 0) {\n        tree(hierarchyNode);\n        treeShape = 1;\n      } // tree type\n      else {\n        cluster(hierarchyNode);\n        treeShape = 0;\n      } // cluster type\n\n      g.selectAll(\".edge\")\n        .data(hierarchyNode.links())\n        .transition()\n        .delay(200)\n        .duration(700)\n        .attr(\"d\", linkGenerator);\n      g.selectAll(\".node\")\n        .data(hierarchyNode.descendants())\n        .transition()\n        .delay(200)\n        .duration(700)\n        .attr(\"transform\", function (d: any) {\n          return \"rotate(\" + d.x + \")translate(\" + d.y + \")\";\n        });\n    };\n\n    return { svg, rePlot };\n  };\n  const setLeafLabel = (svg: D3Selection) => {\n    svg\n      .selectAll(\".leafNode\")\n      .append(\"text\")\n      .attr(\"dy\", 3)\n      .style(\"text-anchor\", (d: any) => {\n        return d.x < 90 || d.x > 270 ? \"start\" : \"end\";\n      })\n      .attr(\"transform\", (d: any) => {\n        return d.x < 90 || d.x > 270 ? \"translate(8)\" : \"rotate(180)translate(-8)\";\n      })\n      .text((d: any) => {\n        return d.data.name;\n      })\n      .on(\"mouseover\", (e: MouseEvent, d: any) => {\n        d3Canvas\n          .select(\"#popup\")\n          .style(\"left\", e.offsetX + 10 + \"px\")\n          .style(\"top\", e.offsetY - 10 + \"px\")\n          .style(\"display\", \"block\")\n          .text(codeList[d.data.name].label);\n      })\n      .on(\"mouseout\", (e, d) => {\n        d3Canvas.select(\"#popup\").style(\"display\", \"none\");\n      });\n  };\n  const setBranchAction = (svg: D3Selection) => {\n    svg\n      .selectAll(\".branchNode\")\n      .on(\"click\", (e, d: any) => {\n        onClickItem(d);\n        svg.selectAll(\".branchNode, .leafNode\").selectAll(\"circle\").classed(\"active\", false);\n        const activeIDs = getChildrenIDs(d);\n        activeIDs.push(d.data.name);\n        activeIDs.forEach((str) => {\n          svg.select(`#${str}`).classed(\"active\", true);\n        });\n        //\n      })\n      .on(\"mouseover\", (e: MouseEvent, d: any) => {\n        svg.select(\"#\" + d.data.name).style(\"stroke\", \"#89ffff\");\n      })\n      .on(\"mouseout\", (e: MouseEvent, d: any) => {\n        svg.select(\"#\" + d.data.name).style(\"stroke\", \"\");\n      });\n  };\n  const setLeafAction = (svg: D3Selection) => {\n    svg\n      .selectAll(\".leafNode\")\n      .on(\"click\", (e, d: any) => {\n        onClickItem(d);\n        svg.selectAll(\".branchNode, .leafNode\").selectAll(\"circle\").classed(\"active\", false);\n        svg.select(`#${d.data.name}`).classed(\"active\", true);\n        //\n      })\n      .on(\"mouseover\", (e, d: any) => {\n        svg.select(\"#\" + d.data.name).style(\"stroke\", \"#89ffff\");\n      })\n      .on(\"mouseout\", (e, d: any) => {\n        svg.select(\"#\" + d.data.name).style(\"stroke\", \"\");\n      });\n  };\n  const appendBtn = (rePlot: () => void) => {\n    const dlButtonDiv = d3Canvas.append(\"div\").attr(\"id\", \"dl_button\").style(\"text-align\", \"right\");\n\n    dlButtonDiv\n      .append(\"input\")\n      .attr(\"class\", \"downloadButton\")\n      .attr(\"type\", \"button\")\n      .attr(\"value\", \"change tree shape\")\n      .on(\"click\", () => {\n        rePlot();\n      });\n\n    dlButtonDiv\n      .append(\"input\")\n      .attr(\"class\", \"downloadButton\")\n      .attr(\"type\", \"button\")\n      .attr(\"value\", \"svg\")\n      .on(\"click\", () => {\n        downloadImg(\"svg\");\n      });\n\n    dlButtonDiv\n      .append(\"input\")\n      .attr(\"class\", \"downloadButton\")\n      .attr(\"type\", \"button\")\n      .attr(\"value\", \"png\")\n      .on(\"click\", () => {\n        downloadImg(\"png\");\n      });\n  };\n  const downloadImg = (format: string) => {\n    let filename = \"tree\";\n    const pngZoom = 2; // png resolution rate\n    let url: string, img: HTMLImageElement, canvas: D3Selection, context: CanvasRenderingContext2D;\n\n    const treeHTML = div.querySelector(\"#roundtree\")!;\n\n    const styleString = div.parentElement!.querySelector(\"style\")!.outerHTML.replace(/[\\r\\n]/g, \"\");\n    const tmp = treeHTML.outerHTML.match(/^([^>]+>)(.+)$/);\n    const sourceString = tmp![1] + styleString + tmp![2];\n    const w = parseInt(d3.select(treeHTML).style(\"width\"));\n    const h = parseInt(d3.select(treeHTML).style(\"height\"));\n\n    // downloading function\n    const aLinkClickDL = () => {\n      if (format === \"png\") {\n        context.drawImage(img, 0, 0, w, h, 0, 0, w * pngZoom, h * pngZoom);\n        url = canvas.node().toDataURL(\"image/png\");\n      }\n\n      const a = d3.select(\"body\").append(\"a\");\n      a.attr(\"class\", \"downloadLink\")\n        .attr(\"download\", filename)\n        .attr(\"href\", url)\n        .text(\"test\")\n        .style(\"display\", \"none\");\n\n      a.node()!.click();\n\n      setTimeout(() => {\n        window.URL.revokeObjectURL(url);\n        if (format == \"png\") {\n          canvas.remove();\n        }\n        a.remove();\n      }, 10);\n    };\n\n    if (format === \"svg\") {\n      // SVG\n      filename += \".svg\";\n      const blobObject = new Blob([sourceString], {\n        type: \"data:image/svg+xml;base64\",\n      });\n      url = window.URL.createObjectURL(blobObject);\n      aLinkClickDL();\n    } else if (format === \"png\") {\n      // PNG\n      filename += \".png\";\n      img = new Image();\n      img.src = \"data:image/svg+xml;utf8,\" + encodeURIComponent(sourceString);\n      img.addEventListener(\"load\", aLinkClickDL, false);\n\n      canvas = d3\n        .select(\"body\")\n        .append(\"canvas\")\n        .attr(\"width\", w * pngZoom)\n        .attr(\"height\", h * pngZoom)\n        .style(\"display\", \"none\");\n      context = canvas.node().getContext(\"2d\");\n    }\n  };\n  //\n  //\n\n  const { svg, rePlot } = renderCluster();\n  setLeafLabel(svg);\n  setBranchAction(svg);\n  setLeafAction(svg);\n  appendBtn(rePlot);\n};\n\ninterface StanzaParameters {\n  newick: string;\n}\n\ninterface NewicBranch {\n  name: string;\n  distance: string;\n  type: string;\n  children: [NewicBranch, NewicBranch] | [NewicLeaf, NewicLeaf];\n}\n\ninterface NewicLeaf {\n  name: string;\n  distance: string;\n  tag: string;\n  type: string;\n  id: string;\n}\n\ninterface NewicObj {\n  name: \"root\";\n  children: [NewicBranch, NewicBranch];\n}\n"],"names":["defaultSeparation","x","pointX","y","pointY","d3.select","d3\r\n        .linkRadial","d3.hierarchy","cluster","d3.cluster","tree","d3\r\n            .tree","d3\r\n                .select"],"mappings":"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"}
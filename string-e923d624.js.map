{"version":3,"file":"string-e923d624.js","sources":["../../../home/runner/work/togomedium-stanza/togomedium-stanza/shared/utils/string.ts"],"sourcesContent":["import { Optional } from \"yohak-tools\";\n\nexport const unescapeJsonString = (str: Optional<string>): Optional<string> => {\n  return str?.replace(/\\\\/g, \"\");\n};\n\nexport const capitalizeFirstLetter = (str: Optional<string>): Optional<string> => {\n  if (!str) {\n    return str;\n  }\n  const reg = /^(.)(.*)$/.exec(str);\n  // console.log(reg);\n  return `${reg![1].toUpperCase()}${reg![2]}`;\n};\n\nexport const makeTogoGenomeOrganismLink = (taxid: Optional<string>): Optional<string> => {\n  if (!taxid) {\n    return taxid;\n  }\n  return `http://togogenome.org/organism/${taxid}`;\n};\n\nexport const makeNcbiOrganismLink = (taxid: Optional<string>): Optional<string> => {\n  if (!taxid) {\n    return taxid;\n  }\n  return `https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?mode=Info&id=${taxid}`;\n};\n\nexport const stringToArray = (str: string): string[] => {\n  return str.split(\",\").map((str) => str.trim());\n};\n\nexport const convertHTMLEntity = (text: string) => {\n  const span = document.createElement(\"span\");\n\n  return text.replace(/&[#A-Za-z0-9]+;/gi, (entity, position, text) => {\n    span.innerHTML = entity;\n    console.log(\"converted\", text, span.innerText);\n    return span.innerText;\n  });\n};\n\nexport const makeSpeciesName = (str: string) => {\n  const arr = str.split(\" \");\n  if (arr.length < 1) {\n    return \"\";\n  }\n  const first = arr.shift()!.replace(\"[\", \"\").charAt(0).toUpperCase();\n\n  const rest = capitalizeFirstLetter(arr.join(\" \"));\n\n  return `${first}. ${rest}`;\n};\n\nexport const makeStrainName = (str: string) => {\n  const arr = str.split(\" \");\n  if (arr.length < 2) {\n    return \"\";\n  }\n  const first = arr.shift()!.charAt(0).toUpperCase();\n  const second = arr.shift()!.charAt(0).toUpperCase();\n  const rest = capitalizeFirstLetter(arr.join(\" \"));\n\n  return `${first}. ${second}. ${rest}`;\n};\n\nexport const decodeHTMLEntities = (text: string): string => {\n  const textArea = document.createElement(\"textarea\");\n  textArea.innerHTML = text;\n  return textArea.value;\n};\n"],"names":[],"mappings":"AAEa,MAAA,kBAAkB,GAAG,CAAC,GAAqB,KAAsB;AAC5E,IAAA,OAAO,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAH,GAAG,CAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACjC,EAAE;AAEW,MAAA,qBAAqB,GAAG,CAAC,GAAqB,KAAsB;IAC/E,IAAI,CAAC,GAAG,EAAE;AACR,QAAA,OAAO,GAAG,CAAC;AACZ,KAAA;IACD,MAAM,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAElC,IAAA,OAAO,CAAG,EAAA,GAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA,EAAG,GAAI,CAAC,CAAC,CAAC,EAAE,CAAC;AAC9C,EAAE;AAgBW,MAAA,aAAa,GAAG,CAAC,GAAW,KAAc;AACrD,IAAA,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AACjD,EAAE;AAEW,MAAA,iBAAiB,GAAG,CAAC,IAAY,KAAI;IAChD,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAE5C,IAAA,OAAO,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,KAAI;AAClE,QAAA,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC,SAAS,CAAC;AACxB,KAAC,CAAC,CAAC;AACL,EAAE;AAEW,MAAA,eAAe,GAAG,CAAC,GAAW,KAAI;IAC7C,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3B,IAAA,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;AAClB,QAAA,OAAO,EAAE,CAAC;AACX,KAAA;IACD,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,EAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IAEpE,MAAM,IAAI,GAAG,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAElD,IAAA,OAAO,CAAG,EAAA,KAAK,CAAK,EAAA,EAAA,IAAI,EAAE,CAAC;AAC7B,EAAE;AAcW,MAAA,kBAAkB,GAAG,CAAC,IAAY,KAAY;IACzD,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AACpD,IAAA,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,OAAO,QAAQ,CAAC,KAAK,CAAC;AACxB;;;;"}
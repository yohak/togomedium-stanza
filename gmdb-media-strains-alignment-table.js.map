{"version":3,"file":"gmdb-media-strains-alignment-table.js","sources":["../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/is-what/dist/index.es.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/copy-anything/dist/index.es.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/node_modules/nanoid/index.browser.js","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-strains-alignment-table/functions/processMediaCell.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-strains-alignment-table/components/MediaCell.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-strains-alignment-table/components/MediaCol.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/shared/components/svg/FilterIcon.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-strains-alignment-table/states/filterTaxon.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-strains-alignment-table/components/TaxonCell.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-strains-alignment-table/states/filterRank.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-strains-alignment-table/components/TaxonCol.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-strains-alignment-table/components/AppContainer.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-strains-alignment-table/App.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-media-strains-alignment-table/index.tsx"],"sourcesContent":["/**\r\n * Returns the object type of the given payload\r\n *\r\n * @param {*} payload\r\n * @returns {string}\r\n */\r\nfunction getType(payload) {\r\n    return Object.prototype.toString.call(payload).slice(8, -1);\r\n}\r\n/**\r\n * Returns whether the payload is undefined\r\n *\r\n * @param {*} payload\r\n * @returns {payload is undefined}\r\n */\r\nfunction isUndefined(payload) {\r\n    return getType(payload) === 'Undefined';\r\n}\r\n/**\r\n * Returns whether the payload is null\r\n *\r\n * @param {*} payload\r\n * @returns {payload is null}\r\n */\r\nfunction isNull(payload) {\r\n    return getType(payload) === 'Null';\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is PlainObject}\r\n */\r\nfunction isPlainObject(payload) {\r\n    if (getType(payload) !== 'Object')\r\n        return false;\r\n    const prototype = Object.getPrototypeOf(payload);\r\n    return prototype.constructor === Object && prototype === Object.prototype;\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is PlainObject}\r\n */\r\nfunction isObject(payload) {\r\n    return isPlainObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a an empty object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is { [K in any]: never }}\r\n */\r\nfunction isEmptyObject(payload) {\r\n    return isPlainObject(payload) && Object.keys(payload).length === 0;\r\n}\r\n/**\r\n * Returns whether the payload is a an empty object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is PlainObject}\r\n */\r\nfunction isFullObject(payload) {\r\n    return isPlainObject(payload) && Object.keys(payload).length > 0;\r\n}\r\n/**\r\n * Returns whether the payload is an any kind of object (including special classes or objects with different prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is PlainObject}\r\n */\r\nfunction isAnyObject(payload) {\r\n    return getType(payload) === 'Object';\r\n}\r\n/**\r\n * Returns whether the payload is an object like a type passed in < >\r\n *\r\n * Usage: isObjectLike<{id: any}>(payload) // will make sure it's an object and has an `id` prop.\r\n *\r\n * @template T this must be passed in < >\r\n * @param {*} payload\r\n * @returns {payload is T}\r\n */\r\nfunction isObjectLike(payload) {\r\n    return isAnyObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a function (regular or async)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is AnyFunction}\r\n */\r\nfunction isFunction(payload) {\r\n    return typeof payload === 'function';\r\n}\r\n/**\r\n * Returns whether the payload is an array\r\n *\r\n * @param {any} payload\r\n * @returns {payload is any[]}\r\n */\r\nfunction isArray(payload) {\r\n    return getType(payload) === 'Array';\r\n}\r\n/**\r\n * Returns whether the payload is a an array with at least 1 item\r\n *\r\n * @param {*} payload\r\n * @returns {payload is any[]}\r\n */\r\nfunction isFullArray(payload) {\r\n    return isArray(payload) && payload.length > 0;\r\n}\r\n/**\r\n * Returns whether the payload is a an empty array\r\n *\r\n * @param {*} payload\r\n * @returns {payload is []}\r\n */\r\nfunction isEmptyArray(payload) {\r\n    return isArray(payload) && payload.length === 0;\r\n}\r\n/**\r\n * Returns whether the payload is a string\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isString(payload) {\r\n    return getType(payload) === 'String';\r\n}\r\n/**\r\n * Returns whether the payload is a string, BUT returns false for ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isFullString(payload) {\r\n    return isString(payload) && payload !== '';\r\n}\r\n/**\r\n * Returns whether the payload is ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isEmptyString(payload) {\r\n    return payload === '';\r\n}\r\n/**\r\n * Returns whether the payload is a number (but not NaN)\r\n *\r\n * This will return `false` for `NaN`!!\r\n *\r\n * @param {*} payload\r\n * @returns {payload is number}\r\n */\r\nfunction isNumber(payload) {\r\n    return getType(payload) === 'Number' && !isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a positive number (but not 0)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is number}\r\n */\r\nfunction isPositiveNumber(payload) {\r\n    return isNumber(payload) && payload > 0;\r\n}\r\n/**\r\n * Returns whether the payload is a negative number (but not 0)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is number}\r\n */\r\nfunction isNegativeNumber(payload) {\r\n    return isNumber(payload) && payload < 0;\r\n}\r\n/**\r\n * Returns whether the payload is a boolean\r\n *\r\n * @param {*} payload\r\n * @returns {payload is boolean}\r\n */\r\nfunction isBoolean(payload) {\r\n    return getType(payload) === 'Boolean';\r\n}\r\n/**\r\n * Returns whether the payload is a regular expression (RegExp)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is RegExp}\r\n */\r\nfunction isRegExp(payload) {\r\n    return getType(payload) === 'RegExp';\r\n}\r\n/**\r\n * Returns whether the payload is a Map\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Map<any, any>}\r\n */\r\nfunction isMap(payload) {\r\n    return getType(payload) === 'Map';\r\n}\r\n/**\r\n * Returns whether the payload is a WeakMap\r\n *\r\n * @param {*} payload\r\n * @returns {payload is WeakMap<any, any>}\r\n */\r\nfunction isWeakMap(payload) {\r\n    return getType(payload) === 'WeakMap';\r\n}\r\n/**\r\n * Returns whether the payload is a Set\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Set<any>}\r\n */\r\nfunction isSet(payload) {\r\n    return getType(payload) === 'Set';\r\n}\r\n/**\r\n * Returns whether the payload is a WeakSet\r\n *\r\n * @param {*} payload\r\n * @returns {payload is WeakSet<any>}\r\n */\r\nfunction isWeakSet(payload) {\r\n    return getType(payload) === 'WeakSet';\r\n}\r\n/**\r\n * Returns whether the payload is a Symbol\r\n *\r\n * @param {*} payload\r\n * @returns {payload is symbol}\r\n */\r\nfunction isSymbol(payload) {\r\n    return getType(payload) === 'Symbol';\r\n}\r\n/**\r\n * Returns whether the payload is a Date, and that the date is valid\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Date}\r\n */\r\nfunction isDate(payload) {\r\n    return getType(payload) === 'Date' && !isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a Blob\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Blob}\r\n */\r\nfunction isBlob(payload) {\r\n    return getType(payload) === 'Blob';\r\n}\r\n/**\r\n * Returns whether the payload is a File\r\n *\r\n * @param {*} payload\r\n * @returns {payload is File}\r\n */\r\nfunction isFile(payload) {\r\n    return getType(payload) === 'File';\r\n}\r\n/**\r\n * Returns whether the payload is a Promise\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Promise<any>}\r\n */\r\nfunction isPromise(payload) {\r\n    return getType(payload) === 'Promise';\r\n}\r\n/**\r\n * Returns whether the payload is an Error\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Error}\r\n */\r\nfunction isError(payload) {\r\n    return getType(payload) === 'Error';\r\n}\r\n/**\r\n * Returns whether the payload is literally the value `NaN` (it's `NaN` and also a `number`)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is typeof NaN}\r\n */\r\nfunction isNaNValue(payload) {\r\n    return getType(payload) === 'Number' && isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a primitive type (eg. Boolean | Null | Undefined | Number | String | Symbol)\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is boolean | null | undefined | number | string | symbol)}\r\n */\r\nfunction isPrimitive(payload) {\r\n    return (isBoolean(payload) ||\r\n        isNull(payload) ||\r\n        isUndefined(payload) ||\r\n        isNumber(payload) ||\r\n        isString(payload) ||\r\n        isSymbol(payload));\r\n}\r\n/**\r\n * Returns true whether the payload is null or undefined\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is null | undefined)}\r\n */\r\nconst isNullOrUndefined = isOneOf(isNull, isUndefined);\r\nfunction isOneOf(a, b, c, d, e) {\r\n    return (value) => a(value) || b(value) || (!!c && c(value)) || (!!d && d(value)) || (!!e && e(value));\r\n}\r\n/**\r\n * Does a generic check to check that the given payload is of a given type.\r\n * In cases like Number, it will return true for NaN as NaN is a Number (thanks javascript!);\r\n * It will, however, differentiate between object and null\r\n *\r\n * @template T\r\n * @param {*} payload\r\n * @param {T} type\r\n * @throws {TypeError} Will throw type error if type is an invalid type\r\n * @returns {payload is T}\r\n */\r\nfunction isType(payload, type) {\r\n    if (!(type instanceof Function)) {\r\n        throw new TypeError('Type must be a function');\r\n    }\r\n    if (!Object.prototype.hasOwnProperty.call(type, 'prototype')) {\r\n        throw new TypeError('Type is not a class');\r\n    }\r\n    // Classes usually have names (as functions usually have names)\r\n    const name = type.name;\r\n    return getType(payload) === name || Boolean(payload && payload.constructor === type);\r\n}\n\nexport { getType, isAnyObject, isArray, isBlob, isBoolean, isDate, isEmptyArray, isEmptyObject, isEmptyString, isError, isFile, isFullArray, isFullObject, isFullString, isFunction, isMap, isNaNValue, isNegativeNumber, isNull, isNullOrUndefined, isNumber, isObject, isObjectLike, isOneOf, isPlainObject, isPositiveNumber, isPrimitive, isPromise, isRegExp, isSet, isString, isSymbol, isType, isUndefined, isWeakMap, isWeakSet };\n","import { isArray, isPlainObject } from 'is-what';\n\nfunction assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n    const propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n        ? 'enumerable'\r\n        : 'nonenumerable';\r\n    if (propType === 'enumerable')\r\n        carry[key] = newVal;\r\n    if (includeNonenumerable && propType === 'nonenumerable') {\r\n        Object.defineProperty(carry, key, {\r\n            value: newVal,\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n        });\r\n    }\r\n}\r\n/**\r\n * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n *\r\n * @param target Target can be anything\r\n * @param [options = {}] Options can be `props` or `nonenumerable`\r\n * @returns the target with replaced values\r\n */\r\nfunction copy(target, options = {}) {\r\n    if (isArray(target)) {\r\n        return target.map((item) => copy(item, options));\r\n    }\r\n    if (!isPlainObject(target)) {\r\n        return target;\r\n    }\r\n    const props = Object.getOwnPropertyNames(target);\r\n    const symbols = Object.getOwnPropertySymbols(target);\r\n    return [...props, ...symbols].reduce((carry, key) => {\r\n        if (isArray(options.props) && !options.props.includes(key)) {\r\n            return carry;\r\n        }\r\n        const val = target[key];\r\n        const newVal = copy(val, options);\r\n        assignProp(carry, key, newVal, target, options.nonenumerable);\r\n        return carry;\r\n    }, {});\r\n}\n\nexport { copy };\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { copy } from \"copy-anything\";\nimport { nanoid } from \"nanoid\";\nimport { CellInfo, DisplayData, Lineage, LineageRank, lineageRanks, Taxon } from \"./types\";\nimport { MediaStrainsAlimentResponse } from \"../../../api/media_strains_alignment/types\";\n\ntype TaxonNode = {\n  id: string;\n  gmId: string;\n  label: string;\n  rank: LineageRank;\n  children: TaxonNode[];\n};\n\nexport const makeCellHeight = (size: number): number => {\n  return 48 * size + size - 1;\n};\n\nconst processMediaCell = (\n  data: MediaStrainsAlimentResponse,\n  taxon: DisplayData[\"taxon\"],\n  filterRank: LineageRank\n): CellInfo[] => {\n  return data.map((item, i) => {\n    return {\n      id: item.gm_id,\n      label: item.label,\n      size: taxon[filterRank][i].length,\n    };\n  });\n};\n\nconst fillNullTaxon = (data: MediaStrainsAlimentResponse): MediaStrainsAlimentResponse => {\n  const cloned: MediaStrainsAlimentResponse = copy(data);\n  const nullCells: { id: string; parentId: string; gmId: string }[] = [];\n  const findNullId = (gmId: string, parentId: string): string | undefined => {\n    return nullCells.find((cell) => parentId === cell.parentId && cell.gmId === gmId)?.id;\n  };\n  cloned.forEach((media) => {\n    media.organisms.forEach((organism, organismIndex) => {\n      const gmId = media.gm_id;\n      lineageRanks.forEach((rank, lineageIndex) => {\n        if (organism[rank] !== null) return;\n        //\n        const parentRank = lineageRanks[lineageIndex - 1];\n        const parent = organism[parentRank]!;\n        const parentId = parent.id;\n        const foundId = findNullId(gmId, parentId);\n        const id = foundId || nanoid();\n        //\n        organism[rank] = { id, label: \"\" };\n        if (!foundId) {\n          nullCells.push({ id, parentId, gmId });\n        }\n      });\n    });\n  });\n  return cloned;\n};\n\nconst processTaxonCol = (\n  data: MediaStrainsAlimentResponse,\n  rank: LineageRank,\n  filterRank: LineageRank\n): CellInfo[][] => {\n  return data.map((medium) => {\n    const tree = makeTaxonTree(medium.organisms, medium.gm_id);\n    return getNodeListOfRankFromTree(tree, rank).map<CellInfo>((node) => ({\n      id: node.id,\n      label: node.label,\n      size: getSizeOfCell(node, filterRank),\n    }));\n  });\n};\n\nexport const processDisplayData = (\n  data: MediaStrainsAlimentResponse,\n  filterTaxon: string = \"\",\n  filterRank: LineageRank = \"strain\"\n): DisplayData => {\n  const nullFilled = fillNullTaxon(data);\n  const filtered: MediaStrainsAlimentResponse = filterData(nullFilled, filterTaxon);\n  const taxon = processTaxonColList(filtered, filterRank);\n  const media = processMediaCell(filtered, taxon, filterRank);\n  return { media, taxon };\n};\n\nconst processTaxonColList = (\n  data: MediaStrainsAlimentResponse,\n  filterRank: LineageRank\n): DisplayData[\"taxon\"] => {\n  return lineageRanks.reduce<any>((accum, rank) => {\n    const result = { ...accum };\n    result[rank] = processTaxonCol(data, rank, filterRank);\n    return result;\n  }, {});\n};\n\nconst filterData = (\n  data: MediaStrainsAlimentResponse,\n  taxId: string = \"\"\n): MediaStrainsAlimentResponse => {\n  if (taxId === \"\") return data;\n  const cloned = copy(data);\n  cloned.forEach((media) => {\n    media.organisms = media.organisms.filter((organism) => {\n      const organismIds = Object.values(organism).map((item) => item!.id);\n      return organismIds.includes(taxId);\n    });\n  });\n  return cloned.filter((medium) => medium.organisms.length > 0);\n};\n\nconst getSizeOfCell = (node: TaxonNode, filterRank: LineageRank): number => {\n  let total: number = 1;\n  const process = (n: TaxonNode) => {\n    if (n.rank !== filterRank) {\n      total += Math.max(n.children.length - 1, 0);\n      n.children.forEach((c) => {\n        process(c);\n      });\n    }\n  };\n  process(node);\n  return total;\n};\n\nconst makeTaxonTree = (organisms: Lineage[], gmId: string): TaxonNode[] => {\n  const flatTaxonList = organisms\n    .map((organism) => lineageToTaxonNode(organism, gmId))\n    .flat()\n    .reduce<TaxonNode[]>(reduceSingle, []);\n\n  organisms.forEach((organism) => {\n    lineageRanks.forEach((rank, index) => {\n      const targetTaxon = organism[rank];\n      const targetNode = findNodeFromFlatList(flatTaxonList, targetTaxon?.id || \"\", rank);\n      if (rank !== \"superkingdom\") {\n        const parentRank = lineageRanks[index - 1]!;\n        const parentTaxon = organism[parentRank];\n        const parentNode = findNodeFromFlatList(flatTaxonList, parentTaxon?.id || \"\", parentRank);\n        parentNode.children.push(targetNode);\n      }\n    });\n  });\n  flatTaxonList.forEach((node) => {\n    node.children = node.children.reduce(reduceSingle, []).sort((a, b) => {\n      if (a.label < b.label) return -1;\n      if (a.label > b.label) return 1;\n      return 0;\n    });\n  });\n  return flatTaxonList.filter((node) => node.rank === \"superkingdom\");\n};\n\nconst getNodeListOfRankFromTree = (tree: TaxonNode[], rank: LineageRank): TaxonNode[] => {\n  const process = (nodes: TaxonNode[], currentRank: LineageRank): TaxonNode[] => {\n    if (currentRank === rank) {\n      return nodes;\n    } else {\n      const nextNodes: TaxonNode[] = nodes.map((node) => node.children).flat();\n      const currentRankIndex = lineageRanks.indexOf(currentRank);\n      const nextRank = lineageRanks[currentRankIndex + 1];\n      return process(nextNodes, nextRank);\n    }\n  };\n\n  return process(tree, \"superkingdom\");\n};\n\nconst findNodeFromFlatList = (list: TaxonNode[], id: string, rank: string): TaxonNode =>\n  list.find((node) => node.rank === rank && id === node.id)!;\n\nconst lineageToTaxonNode = (lineage: Lineage, gmId: string): TaxonNode[] =>\n  lineageRanks.map((key) => makeTaxonNode(lineage[key]!, key, gmId));\n\nconst makeTaxonNode = (taxon: Taxon, rank: LineageRank, gmId: string): TaxonNode => {\n  if (!taxon) {\n    throw Error(\"taxon should not be null\");\n  }\n  return {\n    rank,\n    id: taxon.id,\n    label: taxon.label,\n    gmId,\n    children: [],\n  };\n};\n\nconst reduceSingle = (accum: TaxonNode[], current: TaxonNode): TaxonNode[] => {\n  return accum.find((item) => item.id === current.id && item.rank === current.rank)\n    ? [...accum]\n    : [...accum, current];\n};\n\nexport const __TEST__ = {\n  getNodeListOfRankFromTree,\n  // getStrainsOfMedia,\n  makeTaxonTree,\n  processMediaCell,\n  getSizeOfCell,\n  fillNullTaxon,\n  processTaxonCol,\n};\n\nexport const __SB_TEST__ = {\n  processMediaCell,\n  processTaxonCol,\n};\n","import { css } from \"@emotion/react\";\nimport { Tooltip } from \"@mui/material\";\nimport React, { FC, useEffect, useRef, useState } from \"react\";\nimport { AcceptsEmotion } from \"yohak-tools\";\nimport { COLOR_PRIMARY, COLOR_WHITE } from \"../../../shared/styles/variables\";\nimport { makeCellHeight } from \"../functions/processMediaCell\";\nimport { CellInfo } from \"../functions/types\";\n\ntype Props = {} & CellInfo & AcceptsEmotion;\n\nexport const useToolTipEnabled = () => {\n  const labelRef = useRef<HTMLSpanElement>(null);\n  const [toolTipEnabled, setToolTipEnabled] = useState(false);\n  useEffect(() => {\n    const offsetWidth = labelRef.current?.offsetWidth;\n    const scrollWidth = labelRef.current?.scrollWidth;\n    setToolTipEnabled(!!scrollWidth && !!offsetWidth && scrollWidth > offsetWidth);\n  }, [labelRef]);\n  return { labelRef, toolTipEnabled };\n};\n\nexport const MediaCell: FC<Props> = ({ label, id, size, css, className }) => {\n  const { labelRef, toolTipEnabled } = useToolTipEnabled();\n  return (\n    <div\n      css={[mediaCell, css]}\n      className={className}\n      style={{ height: `${makeCellHeight(size)}px` }}\n    >\n      <a href={`/medium/${id}`}>{id}</a>\n      <div className={\"label-wrapper\"}>\n        <Tooltip\n          title={label}\n          placement={\"top\"}\n          PopperProps={{ disablePortal: true }}\n          arrow\n          disableHoverListener={!toolTipEnabled}\n        >\n          <span ref={labelRef} className={\"label\"}>\n            {label}\n          </span>\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nconst mediaCell = css`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${COLOR_WHITE};\n  padding: 8px 8px 0;\n  font-size: 14px;\n\n  a {\n    color: ${COLOR_PRIMARY};\n    text-decoration: none;\n    width: fit-content;\n  }\n  .label-wrapper {\n    position: relative;\n  }\n  .label {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    height: 16px;\n    flex-shrink: 0;\n  }\n`;\n","import { css } from \"@emotion/react\";\nimport React, { FC } from \"react\";\nimport { AcceptsEmotion } from \"yohak-tools\";\nimport { MediaCell } from \"./MediaCell\";\nimport { COLOR_WHITE } from \"../../../shared/styles/variables\";\nimport { CellInfo } from \"../functions/types\";\n\ntype Props = { mediaList: CellInfo[] } & AcceptsEmotion;\n\nexport const MediaCol: FC<Props> = ({ mediaList, css, className }) => {\n  return (\n    <div css={[mediaCol, css]} className={className}>\n      <div css={emptyCell}></div>\n      {mediaList.map((info, index) => (\n        <MediaCell key={index} {...info} />\n      ))}\n    </div>\n  );\n};\n\nconst mediaCol = css`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  width: 200px;\n`;\nconst emptyCell = css`\n  height: 24px;\n  background-color: ${COLOR_WHITE};\n`;\n","import React, { FC } from \"react\";\nimport { AcceptsEmotion } from \"yohak-tools\";\n\ntype Props = {} & AcceptsEmotion;\n\nexport const FilterIcon: FC<Props> = ({ css, className }) => {\n  return (\n    <svg css={css} className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n      <path d=\"M324.4 64C339.6 64 352 76.37 352 91.63C352 98.32 349.6 104.8 345.2 109.8L240 230V423.6C240 437.1 229.1 448 215.6 448C210.3 448 205.2 446.3 200.9 443.1L124.7 385.6C116.7 379.5 112 370.1 112 360V230L6.836 109.8C2.429 104.8 0 98.32 0 91.63C0 76.37 12.37 64 27.63 64H324.4zM144 224V360L208 408.3V223.1C208 220.1 209.4 216.4 211.1 213.5L314.7 95.1H37.26L140 213.5C142.6 216.4 143.1 220.1 143.1 223.1L144 224zM496 400C504.8 400 512 407.2 512 416C512 424.8 504.8 432 496 432H336C327.2 432 320 424.8 320 416C320 407.2 327.2 400 336 400H496zM320 256C320 247.2 327.2 240 336 240H496C504.8 240 512 247.2 512 256C512 264.8 504.8 272 496 272H336C327.2 272 320 264.8 320 256zM496 80C504.8 80 512 87.16 512 96C512 104.8 504.8 112 496 112H400C391.2 112 384 104.8 384 96C384 87.16 391.2 80 400 80H496z\" />\n    </svg>\n  );\n};\n","import { atom, useRecoilValue, useSetRecoilState } from \"recoil\";\n\nconst filterTaxon = atom<string>({ key: \"filterId\", default: \"\" });\n\nexport const useFilterTaxonState = () => {\n  return useRecoilValue(filterTaxon);\n};\n\nexport const useFilterTaxonMutators = () => {\n  const setter = useSetRecoilState(filterTaxon);\n  const setFilterTaxon = (id: string) => setter((prev) => (id === prev ? \"\" : id));\n  return { setFilterTaxon };\n};\n","import { css } from \"@emotion/react\";\nimport { Tooltip } from \"@mui/material\";\nimport React, { FC } from \"react\";\nimport { AcceptsEmotion } from \"yohak-tools\";\nimport { useToolTipEnabled } from \"./MediaCell\";\nimport { FilterIcon } from \"../../../shared/components/svg/FilterIcon\";\nimport { COLOR_GRAY400, COLOR_PRIMARY, COLOR_WHITE } from \"../../../shared/styles/variables\";\nimport { makeSpeciesName } from \"../../../shared/utils/string\";\nimport { makeCellHeight } from \"../functions/processMediaCell\";\nimport { CellInfo, LineageRank } from \"../functions/types\";\nimport { useFilterTaxonMutators, useFilterTaxonState } from \"../states/filterTaxon\";\n\ntype Props = { rank: LineageRank } & CellInfo & AcceptsEmotion;\n\nexport const TaxonCell: FC<Props> = ({ label, id, size, rank, css, className }) => {\n  const filterId = useFilterTaxonState();\n  const pathRoot = rank === \"strain\" ? \"/strain/\" : \"/taxon/\";\n  const { setFilterTaxon } = useFilterTaxonMutators();\n  const onClickFilter = () => {\n    setFilterTaxon(id);\n  };\n  const { labelRef, toolTipEnabled } = useToolTipEnabled();\n  return (\n    <div\n      css={[taxonCell, css]}\n      className={className}\n      style={{ height: `${makeCellHeight(size)}px` }}\n    >\n      {!!label && (\n        <>\n          <a href={`${pathRoot}${id}`}>{id}</a>\n          <div className={\"label-wrapper\"}>\n            <Tooltip\n              title={makeLabel(label, rank)}\n              placement={\"top\"}\n              PopperProps={{ disablePortal: true }}\n              arrow\n              disableHoverListener={!toolTipEnabled}\n            >\n              <span className={\"label\"} ref={labelRef}>\n                {makeLabel(label, rank)}\n              </span>\n            </Tooltip>\n          </div>\n          <span css={filterIcon} onClick={onClickFilter}>\n            <FilterIcon css={[id === filterId ? filterIconColorActive : filterIconColorInactive]} />\n          </span>\n        </>\n      )}\n      {!label && <>{\"\"}</>}\n    </div>\n  );\n};\n\nconst makeLabel = (label: string, rank: LineageRank): string => {\n  switch (rank) {\n    case \"strain\":\n      return makeSpeciesName(label);\n    case \"species\":\n      return makeSpeciesName(label);\n    default:\n      return label;\n  }\n};\n\nconst taxonCell = css`\n  position: relative;\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${COLOR_WHITE};\n  padding: 8px 8px 0;\n  font-size: 14px;\n\n  a {\n    color: ${COLOR_PRIMARY};\n    text-decoration: none;\n    width: fit-content;\n  }\n\n  .label-wrapper {\n    position: relative;\n  }\n  .label {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    height: 16px;\n    flex-shrink: 0;\n  }\n`;\n\nconst filterIcon = css`\n  width: 16px;\n  height: 16px;\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  cursor: pointer;\n  svg {\n    display: block;\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nconst filterIconColorInactive = css`\n  fill: ${COLOR_GRAY400};\n`;\nconst filterIconColorActive = css`\n  fill: ${COLOR_PRIMARY};\n`;\n","import { atom, useRecoilValue, useSetRecoilState, selector } from \"recoil\";\nimport { Optional } from \"yohak-tools\";\nimport { LineageRank, lineageRanks } from \"../functions/types\";\n\ntype FilterStatus = Record<LineageRank, boolean>;\nconst makeDefaultStatus = (): FilterStatus =>\n  lineageRanks.reduce((accum: any, current) => {\n    return { ...accum, [current]: false };\n  }, {});\nconst filterStatus = atom<FilterStatus>({\n  key: \"filterStatus\",\n  default: makeDefaultStatus(),\n});\n\nconst filterRank = selector({\n  key: \"filterRank\",\n  get: ({ get }) => {\n    const status = get(filterStatus);\n    return findCurrentFilterRank(status);\n  },\n});\n\nexport const useFilterRankState = () => {\n  return useRecoilValue(filterRank);\n};\n\nexport const useFilterRankMutators = () => {\n  const setFilterRankStatus = useSetRecoilState(filterStatus);\n  const changeFilterRank = (rank: LineageRank, val: boolean) => {\n    setFilterRankStatus((prev) => {\n      return { ...prev, [rank]: val };\n    });\n  };\n  return { changeFilterRank };\n};\n\nconst findCurrentFilterRank = (status: FilterStatus): LineageRank => {\n  let found: Optional<LineageRank> = undefined;\n  const arr = lineageRanks.concat().reverse();\n  for (let i = 0; i < arr.length; i++) {\n    const key = arr[i];\n    const val = status[key];\n    if (val) {\n      found = key;\n    } else {\n      break;\n    }\n  }\n  if (found === \"superkingdom\") {\n    return \"superkingdom\";\n  }\n  const result = lineageRanks[lineageRanks.indexOf(found!) - 1];\n  return result || \"strain\";\n};\n\nexport const __TEST__ = {\n  findCurrentFilterRank,\n  makeDefaultStatus,\n};\n","import { css } from \"@emotion/react\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport { AcceptsEmotion, Ease } from \"yohak-tools\";\nimport { TaxonCell } from \"./TaxonCell\";\nimport { COLOR_GRAY_LINE, COLOR_WHITE } from \"../../../shared/styles/variables\";\nimport { capitalizeFirstLetter } from \"../../../shared/utils/string\";\nimport { CellInfo, LineageRank } from \"../functions/types\";\nimport { useFilterRankMutators } from \"../states/filterRank\";\n\ntype Props = {\n  rank: LineageRank;\n  taxonList: CellInfo[][];\n} & AcceptsEmotion;\n\nexport const TaxonCol: FC<Props> = ({ css, className, rank, taxonList }) => {\n  const { changeFilterRank } = useFilterRankMutators();\n  const [isFolded, setIsFolded] = useState(false);\n  const onClickRank = () => {\n    setIsFolded((prev) => {\n      const result = !prev;\n      changeFilterRank(rank, result);\n      return result;\n    });\n  };\n  useEffect(() => {\n    const isFolded = rank === \"superkingdom\" || rank === \"phylum\" || rank === \"class\";\n    if (isFolded) {\n      setIsFolded(true);\n      changeFilterRank(rank, true);\n    }\n  }, []);\n  return (\n    <div css={[taxonCol, isFolded ? foldedStyle : null, css]} className={className}>\n      {!isFolded && (\n        <>\n          <div css={rankCell} onClick={onClickRank}>\n            {capitalizeFirstLetter(rank)}\n          </div>\n          <div css={allTaxonWrapper}>\n            {taxonList.map((list, index) => (\n              <div key={index} css={mediumTaxonWrapper}>\n                {list.map((info, index) => (\n                  <TaxonCell key={index} {...info} rank={rank} />\n                ))}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n      {isFolded && (\n        <div css={foldedCover} onClick={onClickRank}>\n          <span>{capitalizeFirstLetter(rank)}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst taxonCol = css`\n  width: 200px;\n  //background-color: ${COLOR_GRAY_LINE};\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  position: relative;\n  height: 100%;\n  min-height: ${48 + 24}px;\n  transition-duration: 0.4s;\n  transition-timing-function: ${Ease._4_IN_OUT_QUART};\n  overflow: hidden;\n`;\nconst foldedStyle = css`\n  width: 36px;\n`;\nconst foldedCover = css`\n  width: 100%;\n  height: 100%;\n  background-color: ${COLOR_WHITE};\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding-top: 8px;\n  padding-right: 8px;\n  cursor: pointer;\n\n  span {\n    display: block;\n    transform-origin: left top;\n    transform: translateX(24px) rotate(90deg);\n    font-weight: 600;\n  }\n`;\nconst rankCell = css`\n  cursor: pointer;\n  background-color: ${COLOR_WHITE};\n  height: 24px;\n  display: flex;\n  align-items: center;\n  padding-left: 8px;\n  font-weight: 600;\n`;\nconst allTaxonWrapper = css`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  flex-shrink: 0;\n`;\nconst mediumTaxonWrapper = css`\n  display: flex;\n  flex-direction: column;\n  gap: 1px;\n  flex-shrink: 0;\n`;\n","import { css } from \"@emotion/react\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport { AcceptsEmotion } from \"yohak-tools\";\nimport { MediaCol } from \"./MediaCol\";\nimport { TaxonCol } from \"./TaxonCol\";\nimport { MediaStrainsAlimentResponse } from \"../../../api/media_strains_alignment/types\";\nimport { COLOR_GRAY_LINE } from \"../../../shared/styles/variables\";\nimport { processDisplayData } from \"../functions/processMediaCell\";\nimport { DisplayData, lineageRanks } from \"../functions/types\";\nimport { useFilterRankState } from \"../states/filterRank\";\nimport { useFilterTaxonState } from \"../states/filterTaxon\";\n\ntype Props = { data: MediaStrainsAlimentResponse } & AcceptsEmotion;\n\nexport const AppContainer: FC<Props> = ({ data }) => {\n  const [displayData, setDisplayData] = useState<DisplayData>(processDisplayData(data));\n  const filterTaxon = useFilterTaxonState();\n  const filterRank = useFilterRankState();\n  useEffect(() => {\n    if (data) {\n      setDisplayData(processDisplayData(data, filterTaxon, filterRank));\n    }\n  }, [data, filterTaxon, filterRank]);\n  return displayData.media.length ? (\n    <div css={appContainer}>\n      <MediaCol mediaList={displayData.media} />\n      <div css={taxonContainer}>\n        {lineageRanks\n          .concat()\n          .reverse()\n          .map((rank, index) => (\n            <TaxonCol rank={rank} taxonList={displayData.taxon[rank]} key={index} />\n          ))}\n      </div>\n    </div>\n  ) : (\n    <p>NO RESULT FOUND</p>\n  );\n};\n\nconst appContainer = css`\n  display: flex;\n  gap: 2px;\n  padding: 1px;\n  background-color: ${COLOR_GRAY_LINE};\n  width: fit-content;\n`;\nconst taxonContainer = css`\n  display: flex;\n  gap: 1px;\n`;\n","import { css } from \"@emotion/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { Optional } from \"yohak-tools\";\nimport { AppContainer } from \"./components/AppContainer\";\nimport { MediaStrainsAlimentResponse } from \"../../api/media_strains_alignment/types\";\nimport { API_MEDIA_STRAINS_ALIGNMENT } from \"../../api/paths\";\nimport { COLOR_WHITE, SIZE1 } from \"../../shared/styles/variables\";\nimport { getData } from \"../../shared/utils/getData\";\nexport type AppProps = {\n  gm_ids: string[];\n  prioritizedOrganism?: string[];\n  stanzaElement?: Document;\n};\n\nconst App = ({ gm_ids, stanzaElement }: AppProps) => {\n  const [data, setData] = useState<Optional<MediaStrainsAlimentResponse>>(undefined);\n  useEffect(() => {\n    (async () => {\n      const response = await getData<MediaStrainsAlimentResponse>(API_MEDIA_STRAINS_ALIGNMENT, {\n        gm_ids: gm_ids.join(\",\"),\n      });\n      setData(response.body);\n    })();\n  }, [gm_ids]);\n  return data ? (\n    <div css={wrapper}>{data && <AppContainer data={data}></AppContainer>}</div>\n  ) : (\n    <>Loading...</>\n  );\n};\n\nconst wrapper = css`\n  min-height: 100px;\n  width: fit-content;\n  min-width: 100%;\n  background-color: ${COLOR_WHITE};\n  border-radius: 5px;\n  padding: ${SIZE1};\n`;\n\nexport default App;\n","import { ThemeProvider } from \"@mui/material/styles\";\nimport React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport Stanza from \"togostanza/stanza\";\nimport App from \"./App\";\nimport { EmotionCacheProvider } from \"../../shared/components/EmotionCacheProvider\";\nimport { muiTheme } from \"../../shared/components/muiTheme\";\nimport { importWebFontForTogoMedium } from \"../../shared/utils/stanza\";\nimport { stringToArray } from \"../../shared/utils/string\";\n\nexport default class HelloReact extends Stanza {\n  async render() {\n    this._render();\n    importWebFontForTogoMedium(this);\n  }\n\n  handleAttributeChange() {\n    this._render();\n  }\n\n  _render() {\n    const main = this.root.querySelector(\"main\");\n    const gm_ids = stringToArray(this.params.gm_ids);\n    ReactDOM.render(\n      <StrictMode>\n        <RecoilRoot>\n          <ThemeProvider theme={muiTheme}>\n            <EmotionCacheProvider>\n              <App stanzaElement={this.root} gm_ids={gm_ids} />\n            </EmotionCacheProvider>\n          </ThemeProvider>\n        </RecoilRoot>\n      </StrictMode>,\n      main\n    );\n  }\n}\n"],"names":["useRef","useState","useEffect","_jsxs","_jsx","atom","useRecoilValue","useSetRecoilState","_Fragment","selector","Ease","StrictMode","RecoilRoot"],"mappings":"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"}